// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type Status string

const (
	StatusActiveHealthy   Status = "ACTIVE_HEALTHY"
	StatusActiveUnhealthy Status = "ACTIVE_UNHEALTHY"
	StatusComingUp        Status = "COMING_UP"
	StatusGoingDown       Status = "GOING_DOWN"
	StatusInactive        Status = "INACTIVE"
	StatusInitFailed      Status = "INIT_FAILED"
	StatusRemoved         Status = "REMOVED"
	StatusRestarting      Status = "RESTARTING"
	StatusUnknown         Status = "UNKNOWN"
	StatusUpgrading       Status = "UPGRADING"
	StatusPausing         Status = "PAUSING"
	StatusRestoring       Status = "RESTORING"
	StatusRestoreFailed   Status = "RESTORE_FAILED"
	StatusPauseFailed     Status = "PAUSE_FAILED"
	StatusResizing        Status = "RESIZING"
)

func (e Status) ToPointer() *Status {
	return &e
}
func (e *Status) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "ACTIVE_HEALTHY":
		fallthrough
	case "ACTIVE_UNHEALTHY":
		fallthrough
	case "COMING_UP":
		fallthrough
	case "GOING_DOWN":
		fallthrough
	case "INACTIVE":
		fallthrough
	case "INIT_FAILED":
		fallthrough
	case "REMOVED":
		fallthrough
	case "RESTARTING":
		fallthrough
	case "UNKNOWN":
		fallthrough
	case "UPGRADING":
		fallthrough
	case "PAUSING":
		fallthrough
	case "RESTORING":
		fallthrough
	case "RESTORE_FAILED":
		fallthrough
	case "PAUSE_FAILED":
		fallthrough
	case "RESIZING":
		*e = Status(v)
		return nil
	default:
		return fmt.Errorf("invalid value for Status: %v", v)
	}
}

type V1ProjectWithDatabaseResponse struct {
	// Id of your project
	ID string `json:"id"`
	// Slug of your organization
	OrganizationID string `json:"organization_id"`
	// Name of your project
	Name string `json:"name"`
	// Region of your project
	Region string `json:"region"`
	// Creation timestamp
	CreatedAt string             `json:"created_at"`
	Database  V1DatabaseResponse `json:"database"`
	Status    Status             `json:"status"`
}

func (o *V1ProjectWithDatabaseResponse) GetID() string {
	if o == nil {
		return ""
	}
	return o.ID
}

func (o *V1ProjectWithDatabaseResponse) GetOrganizationID() string {
	if o == nil {
		return ""
	}
	return o.OrganizationID
}

func (o *V1ProjectWithDatabaseResponse) GetName() string {
	if o == nil {
		return ""
	}
	return o.Name
}

func (o *V1ProjectWithDatabaseResponse) GetRegion() string {
	if o == nil {
		return ""
	}
	return o.Region
}

func (o *V1ProjectWithDatabaseResponse) GetCreatedAt() string {
	if o == nil {
		return ""
	}
	return o.CreatedAt
}

func (o *V1ProjectWithDatabaseResponse) GetDatabase() V1DatabaseResponse {
	if o == nil {
		return V1DatabaseResponse{}
	}
	return o.Database
}

func (o *V1ProjectWithDatabaseResponse) GetStatus() Status {
	if o == nil {
		return Status("")
	}
	return o.Status
}
