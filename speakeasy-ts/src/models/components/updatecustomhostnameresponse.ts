/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { ClosedEnum } from "../../types/enums.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import {
  CfResponse,
  CfResponse$inboundSchema,
  CfResponse$Outbound,
  CfResponse$outboundSchema,
} from "./cfresponse.js";

export const UpdateCustomHostnameResponseStatus = {
  OneNotStarted: "1_not_started",
  TwoInitiated: "2_initiated",
  ThreeChallengeVerified: "3_challenge_verified",
  FourOriginSetupCompleted: "4_origin_setup_completed",
  FiveServicesReconfigured: "5_services_reconfigured",
} as const;
export type UpdateCustomHostnameResponseStatus = ClosedEnum<
  typeof UpdateCustomHostnameResponseStatus
>;

export type UpdateCustomHostnameResponse = {
  status: UpdateCustomHostnameResponseStatus;
  customHostname: string;
  data: CfResponse;
};

/** @internal */
export const UpdateCustomHostnameResponseStatus$inboundSchema: z.ZodNativeEnum<
  typeof UpdateCustomHostnameResponseStatus
> = z.nativeEnum(UpdateCustomHostnameResponseStatus);

/** @internal */
export const UpdateCustomHostnameResponseStatus$outboundSchema: z.ZodNativeEnum<
  typeof UpdateCustomHostnameResponseStatus
> = UpdateCustomHostnameResponseStatus$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UpdateCustomHostnameResponseStatus$ {
  /** @deprecated use `UpdateCustomHostnameResponseStatus$inboundSchema` instead. */
  export const inboundSchema = UpdateCustomHostnameResponseStatus$inboundSchema;
  /** @deprecated use `UpdateCustomHostnameResponseStatus$outboundSchema` instead. */
  export const outboundSchema =
    UpdateCustomHostnameResponseStatus$outboundSchema;
}

/** @internal */
export const UpdateCustomHostnameResponse$inboundSchema: z.ZodType<
  UpdateCustomHostnameResponse,
  z.ZodTypeDef,
  unknown
> = z.object({
  status: UpdateCustomHostnameResponseStatus$inboundSchema,
  custom_hostname: z.string(),
  data: CfResponse$inboundSchema,
}).transform((v) => {
  return remap$(v, {
    "custom_hostname": "customHostname",
  });
});

/** @internal */
export type UpdateCustomHostnameResponse$Outbound = {
  status: string;
  custom_hostname: string;
  data: CfResponse$Outbound;
};

/** @internal */
export const UpdateCustomHostnameResponse$outboundSchema: z.ZodType<
  UpdateCustomHostnameResponse$Outbound,
  z.ZodTypeDef,
  UpdateCustomHostnameResponse
> = z.object({
  status: UpdateCustomHostnameResponseStatus$outboundSchema,
  customHostname: z.string(),
  data: CfResponse$outboundSchema,
}).transform((v) => {
  return remap$(v, {
    customHostname: "custom_hostname",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UpdateCustomHostnameResponse$ {
  /** @deprecated use `UpdateCustomHostnameResponse$inboundSchema` instead. */
  export const inboundSchema = UpdateCustomHostnameResponse$inboundSchema;
  /** @deprecated use `UpdateCustomHostnameResponse$outboundSchema` instead. */
  export const outboundSchema = UpdateCustomHostnameResponse$outboundSchema;
  /** @deprecated use `UpdateCustomHostnameResponse$Outbound` instead. */
  export type Outbound = UpdateCustomHostnameResponse$Outbound;
}

export function updateCustomHostnameResponseToJSON(
  updateCustomHostnameResponse: UpdateCustomHostnameResponse,
): string {
  return JSON.stringify(
    UpdateCustomHostnameResponse$outboundSchema.parse(
      updateCustomHostnameResponse,
    ),
  );
}

export function updateCustomHostnameResponseFromJSON(
  jsonString: string,
): SafeParseResult<UpdateCustomHostnameResponse, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => UpdateCustomHostnameResponse$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'UpdateCustomHostnameResponse' from JSON`,
  );
}
