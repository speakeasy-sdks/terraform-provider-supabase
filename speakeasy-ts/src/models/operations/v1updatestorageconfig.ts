/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import * as components from "../components/index.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type V1UpdateStorageConfigRequest = {
  /**
   * Project ref
   */
  ref: string;
  updateStorageConfigBody: components.UpdateStorageConfigBody;
};

/** @internal */
export const V1UpdateStorageConfigRequest$inboundSchema: z.ZodType<
  V1UpdateStorageConfigRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  ref: z.string(),
  UpdateStorageConfigBody: components.UpdateStorageConfigBody$inboundSchema,
}).transform((v) => {
  return remap$(v, {
    "UpdateStorageConfigBody": "updateStorageConfigBody",
  });
});

/** @internal */
export type V1UpdateStorageConfigRequest$Outbound = {
  ref: string;
  UpdateStorageConfigBody: components.UpdateStorageConfigBody$Outbound;
};

/** @internal */
export const V1UpdateStorageConfigRequest$outboundSchema: z.ZodType<
  V1UpdateStorageConfigRequest$Outbound,
  z.ZodTypeDef,
  V1UpdateStorageConfigRequest
> = z.object({
  ref: z.string(),
  updateStorageConfigBody: components.UpdateStorageConfigBody$outboundSchema,
}).transform((v) => {
  return remap$(v, {
    updateStorageConfigBody: "UpdateStorageConfigBody",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace V1UpdateStorageConfigRequest$ {
  /** @deprecated use `V1UpdateStorageConfigRequest$inboundSchema` instead. */
  export const inboundSchema = V1UpdateStorageConfigRequest$inboundSchema;
  /** @deprecated use `V1UpdateStorageConfigRequest$outboundSchema` instead. */
  export const outboundSchema = V1UpdateStorageConfigRequest$outboundSchema;
  /** @deprecated use `V1UpdateStorageConfigRequest$Outbound` instead. */
  export type Outbound = V1UpdateStorageConfigRequest$Outbound;
}

export function v1UpdateStorageConfigRequestToJSON(
  v1UpdateStorageConfigRequest: V1UpdateStorageConfigRequest,
): string {
  return JSON.stringify(
    V1UpdateStorageConfigRequest$outboundSchema.parse(
      v1UpdateStorageConfigRequest,
    ),
  );
}

export function v1UpdateStorageConfigRequestFromJSON(
  jsonString: string,
): SafeParseResult<V1UpdateStorageConfigRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => V1UpdateStorageConfigRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'V1UpdateStorageConfigRequest' from JSON`,
  );
}
