// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"github.com/speakeasy/terraform-provider-supabase/internal/sdk/models/shared"
	"net/http"
)

type V1CreateAFunctionRequest struct {
	// Project ref
	Ref                  string                      `pathParam:"style=simple,explode=false,name=ref"`
	Slug                 *string                     `queryParam:"style=form,explode=true,name=slug"`
	Name                 *string                     `queryParam:"style=form,explode=true,name=name"`
	VerifyJwt            *bool                       `queryParam:"style=form,explode=true,name=verify_jwt"`
	ImportMap            *bool                       `queryParam:"style=form,explode=true,name=import_map"`
	EntrypointPath       *string                     `queryParam:"style=form,explode=true,name=entrypoint_path"`
	ImportMapPath        *string                     `queryParam:"style=form,explode=true,name=import_map_path"`
	ComputeMultiplier    *float64                    `queryParam:"style=form,explode=true,name=compute_multiplier"`
	V1CreateFunctionBody shared.V1CreateFunctionBody `request:"mediaType=application/json"`
}

func (o *V1CreateAFunctionRequest) GetRef() string {
	if o == nil {
		return ""
	}
	return o.Ref
}

func (o *V1CreateAFunctionRequest) GetSlug() *string {
	if o == nil {
		return nil
	}
	return o.Slug
}

func (o *V1CreateAFunctionRequest) GetName() *string {
	if o == nil {
		return nil
	}
	return o.Name
}

func (o *V1CreateAFunctionRequest) GetVerifyJwt() *bool {
	if o == nil {
		return nil
	}
	return o.VerifyJwt
}

func (o *V1CreateAFunctionRequest) GetImportMap() *bool {
	if o == nil {
		return nil
	}
	return o.ImportMap
}

func (o *V1CreateAFunctionRequest) GetEntrypointPath() *string {
	if o == nil {
		return nil
	}
	return o.EntrypointPath
}

func (o *V1CreateAFunctionRequest) GetImportMapPath() *string {
	if o == nil {
		return nil
	}
	return o.ImportMapPath
}

func (o *V1CreateAFunctionRequest) GetComputeMultiplier() *float64 {
	if o == nil {
		return nil
	}
	return o.ComputeMultiplier
}

func (o *V1CreateAFunctionRequest) GetV1CreateFunctionBody() shared.V1CreateFunctionBody {
	if o == nil {
		return shared.V1CreateFunctionBody{}
	}
	return o.V1CreateFunctionBody
}

type V1CreateAFunctionResponse struct {
	// HTTP response content type for this operation
	ContentType string
	// HTTP response status code for this operation
	StatusCode int
	// Raw HTTP response; suitable for custom response parsing
	RawResponse      *http.Response
	FunctionResponse *shared.FunctionResponse
}

func (o *V1CreateAFunctionResponse) GetContentType() string {
	if o == nil {
		return ""
	}
	return o.ContentType
}

func (o *V1CreateAFunctionResponse) GetStatusCode() int {
	if o == nil {
		return 0
	}
	return o.StatusCode
}

func (o *V1CreateAFunctionResponse) GetRawResponse() *http.Response {
	if o == nil {
		return nil
	}
	return o.RawResponse
}

func (o *V1CreateAFunctionResponse) GetFunctionResponse() *shared.FunctionResponse {
	if o == nil {
		return nil
	}
	return o.FunctionResponse
}
