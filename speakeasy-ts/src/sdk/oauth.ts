/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { oauthAuthorizeUser } from "../funcs/oauthAuthorizeUser.js";
import { oauthExchangeToken } from "../funcs/oauthExchangeToken.js";
import { ClientSDK, RequestOptions } from "../lib/sdks.js";
import * as components from "../models/components/index.js";
import * as operations from "../models/operations/index.js";
import { unwrapAsync } from "../types/fp.js";

export class Oauth extends ClientSDK {
  /**
   * [Beta] Authorize user through oauth
   */
  async authorizeUser(
    request: operations.V1AuthorizeUserRequest,
    options?: RequestOptions,
  ): Promise<void> {
    return unwrapAsync(oauthAuthorizeUser(
      this,
      request,
      options,
    ));
  }

  /**
   * [Beta] Exchange auth code for user's access and refresh token
   */
  async exchangeToken(
    request: components.OAuthTokenBody,
    options?: RequestOptions,
  ): Promise<components.OAuthTokenResponse> {
    return unwrapAsync(oauthExchangeToken(
      this,
      request,
      options,
    ));
  }
}
