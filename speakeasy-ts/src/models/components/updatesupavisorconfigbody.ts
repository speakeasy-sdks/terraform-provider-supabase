/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { ClosedEnum } from "../../types/enums.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

/**
 * This field is deprecated and is ignored in this request
 *
 * @deprecated enum: This will be removed in a future release, please migrate away from it as soon as possible.
 */
export const UpdateSupavisorConfigBodyPoolMode = {
  Transaction: "transaction",
  Session: "session",
} as const;
/**
 * This field is deprecated and is ignored in this request
 *
 * @deprecated enum: This will be removed in a future release, please migrate away from it as soon as possible.
 */
export type UpdateSupavisorConfigBodyPoolMode = ClosedEnum<
  typeof UpdateSupavisorConfigBodyPoolMode
>;

export type UpdateSupavisorConfigBody = {
  defaultPoolSize?: number | null | undefined;
  /**
   * This field is deprecated and is ignored in this request
   *
   * @deprecated field: This will be removed in a future release, please migrate away from it as soon as possible.
   */
  poolMode?: UpdateSupavisorConfigBodyPoolMode | undefined;
};

/** @internal */
export const UpdateSupavisorConfigBodyPoolMode$inboundSchema: z.ZodNativeEnum<
  typeof UpdateSupavisorConfigBodyPoolMode
> = z.nativeEnum(UpdateSupavisorConfigBodyPoolMode);

/** @internal */
export const UpdateSupavisorConfigBodyPoolMode$outboundSchema: z.ZodNativeEnum<
  typeof UpdateSupavisorConfigBodyPoolMode
> = UpdateSupavisorConfigBodyPoolMode$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UpdateSupavisorConfigBodyPoolMode$ {
  /** @deprecated use `UpdateSupavisorConfigBodyPoolMode$inboundSchema` instead. */
  export const inboundSchema = UpdateSupavisorConfigBodyPoolMode$inboundSchema;
  /** @deprecated use `UpdateSupavisorConfigBodyPoolMode$outboundSchema` instead. */
  export const outboundSchema =
    UpdateSupavisorConfigBodyPoolMode$outboundSchema;
}

/** @internal */
export const UpdateSupavisorConfigBody$inboundSchema: z.ZodType<
  UpdateSupavisorConfigBody,
  z.ZodTypeDef,
  unknown
> = z.object({
  default_pool_size: z.nullable(z.number().int()).optional(),
  pool_mode: UpdateSupavisorConfigBodyPoolMode$inboundSchema.optional(),
}).transform((v) => {
  return remap$(v, {
    "default_pool_size": "defaultPoolSize",
    "pool_mode": "poolMode",
  });
});

/** @internal */
export type UpdateSupavisorConfigBody$Outbound = {
  default_pool_size?: number | null | undefined;
  pool_mode?: string | undefined;
};

/** @internal */
export const UpdateSupavisorConfigBody$outboundSchema: z.ZodType<
  UpdateSupavisorConfigBody$Outbound,
  z.ZodTypeDef,
  UpdateSupavisorConfigBody
> = z.object({
  defaultPoolSize: z.nullable(z.number().int()).optional(),
  poolMode: UpdateSupavisorConfigBodyPoolMode$outboundSchema.optional(),
}).transform((v) => {
  return remap$(v, {
    defaultPoolSize: "default_pool_size",
    poolMode: "pool_mode",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UpdateSupavisorConfigBody$ {
  /** @deprecated use `UpdateSupavisorConfigBody$inboundSchema` instead. */
  export const inboundSchema = UpdateSupavisorConfigBody$inboundSchema;
  /** @deprecated use `UpdateSupavisorConfigBody$outboundSchema` instead. */
  export const outboundSchema = UpdateSupavisorConfigBody$outboundSchema;
  /** @deprecated use `UpdateSupavisorConfigBody$Outbound` instead. */
  export type Outbound = UpdateSupavisorConfigBody$Outbound;
}

export function updateSupavisorConfigBodyToJSON(
  updateSupavisorConfigBody: UpdateSupavisorConfigBody,
): string {
  return JSON.stringify(
    UpdateSupavisorConfigBody$outboundSchema.parse(updateSupavisorConfigBody),
  );
}

export function updateSupavisorConfigBodyFromJSON(
  jsonString: string,
): SafeParseResult<UpdateSupavisorConfigBody, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => UpdateSupavisorConfigBody$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'UpdateSupavisorConfigBody' from JSON`,
  );
}
