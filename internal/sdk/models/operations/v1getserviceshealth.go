// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"github.com/speakeasy/terraform-provider-supabase/internal/sdk/models/shared"
	"net/http"
)

type Services string

const (
	ServicesAuth     Services = "auth"
	ServicesDb       Services = "db"
	ServicesPooler   Services = "pooler"
	ServicesRealtime Services = "realtime"
	ServicesRest     Services = "rest"
	ServicesStorage  Services = "storage"
)

func (e Services) ToPointer() *Services {
	return &e
}
func (e *Services) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "auth":
		fallthrough
	case "db":
		fallthrough
	case "pooler":
		fallthrough
	case "realtime":
		fallthrough
	case "rest":
		fallthrough
	case "storage":
		*e = Services(v)
		return nil
	default:
		return fmt.Errorf("invalid value for Services: %v", v)
	}
}

type V1GetServicesHealthRequest struct {
	// Project ref
	Ref       string     `pathParam:"style=simple,explode=false,name=ref"`
	TimeoutMs *int64     `queryParam:"style=form,explode=true,name=timeout_ms"`
	Services  []Services `queryParam:"style=form,explode=true,name=services"`
}

func (o *V1GetServicesHealthRequest) GetRef() string {
	if o == nil {
		return ""
	}
	return o.Ref
}

func (o *V1GetServicesHealthRequest) GetTimeoutMs() *int64 {
	if o == nil {
		return nil
	}
	return o.TimeoutMs
}

func (o *V1GetServicesHealthRequest) GetServices() []Services {
	if o == nil {
		return []Services{}
	}
	return o.Services
}

type V1GetServicesHealthResponse struct {
	// HTTP response content type for this operation
	ContentType string
	// HTTP response status code for this operation
	StatusCode int
	// Raw HTTP response; suitable for custom response parsing
	RawResponse              *http.Response
	V1ServiceHealthResponses []shared.V1ServiceHealthResponse
}

func (o *V1GetServicesHealthResponse) GetContentType() string {
	if o == nil {
		return ""
	}
	return o.ContentType
}

func (o *V1GetServicesHealthResponse) GetStatusCode() int {
	if o == nil {
		return 0
	}
	return o.StatusCode
}

func (o *V1GetServicesHealthResponse) GetRawResponse() *http.Response {
	if o == nil {
		return nil
	}
	return o.RawResponse
}

func (o *V1GetServicesHealthResponse) GetV1ServiceHealthResponses() []shared.V1ServiceHealthResponse {
	if o == nil {
		return nil
	}
	return o.V1ServiceHealthResponses
}
