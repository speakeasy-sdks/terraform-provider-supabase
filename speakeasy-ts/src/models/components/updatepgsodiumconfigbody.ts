/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type UpdatePgsodiumConfigBody = {
  rootKey: string;
};

/** @internal */
export const UpdatePgsodiumConfigBody$inboundSchema: z.ZodType<
  UpdatePgsodiumConfigBody,
  z.ZodTypeDef,
  unknown
> = z.object({
  root_key: z.string(),
}).transform((v) => {
  return remap$(v, {
    "root_key": "rootKey",
  });
});

/** @internal */
export type UpdatePgsodiumConfigBody$Outbound = {
  root_key: string;
};

/** @internal */
export const UpdatePgsodiumConfigBody$outboundSchema: z.ZodType<
  UpdatePgsodiumConfigBody$Outbound,
  z.ZodTypeDef,
  UpdatePgsodiumConfigBody
> = z.object({
  rootKey: z.string(),
}).transform((v) => {
  return remap$(v, {
    rootKey: "root_key",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UpdatePgsodiumConfigBody$ {
  /** @deprecated use `UpdatePgsodiumConfigBody$inboundSchema` instead. */
  export const inboundSchema = UpdatePgsodiumConfigBody$inboundSchema;
  /** @deprecated use `UpdatePgsodiumConfigBody$outboundSchema` instead. */
  export const outboundSchema = UpdatePgsodiumConfigBody$outboundSchema;
  /** @deprecated use `UpdatePgsodiumConfigBody$Outbound` instead. */
  export type Outbound = UpdatePgsodiumConfigBody$Outbound;
}

export function updatePgsodiumConfigBodyToJSON(
  updatePgsodiumConfigBody: UpdatePgsodiumConfigBody,
): string {
  return JSON.stringify(
    UpdatePgsodiumConfigBody$outboundSchema.parse(updatePgsodiumConfigBody),
  );
}

export function updatePgsodiumConfigBodyFromJSON(
  jsonString: string,
): SafeParseResult<UpdatePgsodiumConfigBody, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => UpdatePgsodiumConfigBody$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'UpdatePgsodiumConfigBody' from JSON`,
  );
}
