// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// CreateProviderBodyType - What type of provider will be created
type CreateProviderBodyType string

const (
	CreateProviderBodyTypeSaml CreateProviderBodyType = "saml"
)

func (e CreateProviderBodyType) ToPointer() *CreateProviderBodyType {
	return &e
}
func (e *CreateProviderBodyType) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "saml":
		*e = CreateProviderBodyType(v)
		return nil
	default:
		return fmt.Errorf("invalid value for CreateProviderBodyType: %v", v)
	}
}

type CreateProviderBody struct {
	// What type of provider will be created
	Type             CreateProviderBodyType `json:"type"`
	MetadataXML      *string                `json:"metadata_xml,omitempty"`
	MetadataURL      *string                `json:"metadata_url,omitempty"`
	Domains          []string               `json:"domains,omitempty"`
	AttributeMapping *AttributeMapping      `json:"attribute_mapping,omitempty"`
}

func (o *CreateProviderBody) GetType() CreateProviderBodyType {
	if o == nil {
		return CreateProviderBodyType("")
	}
	return o.Type
}

func (o *CreateProviderBody) GetMetadataXML() *string {
	if o == nil {
		return nil
	}
	return o.MetadataXML
}

func (o *CreateProviderBody) GetMetadataURL() *string {
	if o == nil {
		return nil
	}
	return o.MetadataURL
}

func (o *CreateProviderBody) GetDomains() []string {
	if o == nil {
		return nil
	}
	return o.Domains
}

func (o *CreateProviderBody) GetAttributeMapping() *AttributeMapping {
	if o == nil {
		return nil
	}
	return o.AttributeMapping
}
