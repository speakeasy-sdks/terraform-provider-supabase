/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { edgeFunctionsCreate } from "../funcs/edgeFunctionsCreate.js";
import { edgeFunctionsDeleteFunction } from "../funcs/edgeFunctionsDeleteFunction.js";
import { edgeFunctionsGetFunction } from "../funcs/edgeFunctionsGetFunction.js";
import { edgeFunctionsGetFunctionBody } from "../funcs/edgeFunctionsGetFunctionBody.js";
import { edgeFunctionsList } from "../funcs/edgeFunctionsList.js";
import { edgeFunctionsUpdateFunction } from "../funcs/edgeFunctionsUpdateFunction.js";
import { ClientSDK, RequestOptions } from "../lib/sdks.js";
import * as components from "../models/components/index.js";
import * as operations from "../models/operations/index.js";
import { unwrapAsync } from "../types/fp.js";

export class EdgeFunctions extends ClientSDK {
  /**
   * Create a function
   *
   * @remarks
   * Creates a function and adds it to the specified project.
   */
  async create(
    request: operations.V1CreateAFunctionRequest,
    options?: RequestOptions,
  ): Promise<components.FunctionResponse> {
    return unwrapAsync(edgeFunctionsCreate(
      this,
      request,
      options,
    ));
  }

  /**
   * List all functions
   *
   * @remarks
   * Returns all functions you've previously added to the specified project.
   */
  async list(
    request: operations.V1ListAllFunctionsRequest,
    options?: RequestOptions,
  ): Promise<Array<components.FunctionResponse>> {
    return unwrapAsync(edgeFunctionsList(
      this,
      request,
      options,
    ));
  }

  /**
   * Retrieve a function
   *
   * @remarks
   * Retrieves a function with the specified slug and project.
   */
  async getFunction(
    request: operations.V1GetAFunctionRequest,
    options?: RequestOptions,
  ): Promise<components.FunctionSlugResponse> {
    return unwrapAsync(edgeFunctionsGetFunction(
      this,
      request,
      options,
    ));
  }

  /**
   * Update a function
   *
   * @remarks
   * Updates a function with the specified slug and project.
   */
  async updateFunction(
    request: operations.V1UpdateAFunctionRequest,
    options?: RequestOptions,
  ): Promise<components.FunctionResponse> {
    return unwrapAsync(edgeFunctionsUpdateFunction(
      this,
      request,
      options,
    ));
  }

  /**
   * Delete a function
   *
   * @remarks
   * Deletes a function with the specified slug from the specified project.
   */
  async deleteFunction(
    request: operations.V1DeleteAFunctionRequest,
    options?: RequestOptions,
  ): Promise<void> {
    return unwrapAsync(edgeFunctionsDeleteFunction(
      this,
      request,
      options,
    ));
  }

  /**
   * Retrieve a function body
   *
   * @remarks
   * Retrieves a function body for the specified slug and project.
   */
  async getFunctionBody(
    request: operations.V1GetAFunctionBodyRequest,
    options?: RequestOptions,
  ): Promise<void> {
    return unwrapAsync(edgeFunctionsGetFunctionBody(
      this,
      request,
      options,
    ));
  }
}
