// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type OptInTags string

const (
	OptInTagsAiSQLGeneratorOptIn OptInTags = "AI_SQL_GENERATOR_OPT_IN"
)

func (e OptInTags) ToPointer() *OptInTags {
	return &e
}
func (e *OptInTags) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "AI_SQL_GENERATOR_OPT_IN":
		*e = OptInTags(v)
		return nil
	default:
		return fmt.Errorf("invalid value for OptInTags: %v", v)
	}
}

type V1OrganizationSlugResponse struct {
	Plan                   *BillingPlanID   `json:"plan,omitempty"`
	OptInTags              []OptInTags      `json:"opt_in_tags"`
	AllowedReleaseChannels []ReleaseChannel `json:"allowed_release_channels"`
	ID                     string           `json:"id"`
	Name                   string           `json:"name"`
}

func (o *V1OrganizationSlugResponse) GetPlan() *BillingPlanID {
	if o == nil {
		return nil
	}
	return o.Plan
}

func (o *V1OrganizationSlugResponse) GetOptInTags() []OptInTags {
	if o == nil {
		return []OptInTags{}
	}
	return o.OptInTags
}

func (o *V1OrganizationSlugResponse) GetAllowedReleaseChannels() []ReleaseChannel {
	if o == nil {
		return []ReleaseChannel{}
	}
	return o.AllowedReleaseChannels
}

func (o *V1OrganizationSlugResponse) GetID() string {
	if o == nil {
		return ""
	}
	return o.ID
}

func (o *V1OrganizationSlugResponse) GetName() string {
	if o == nil {
		return ""
	}
	return o.Name
}
