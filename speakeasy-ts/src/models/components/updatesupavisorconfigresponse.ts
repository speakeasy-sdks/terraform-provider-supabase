/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { ClosedEnum } from "../../types/enums.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export const UpdateSupavisorConfigResponsePoolMode = {
  Transaction: "transaction",
  Session: "session",
} as const;
export type UpdateSupavisorConfigResponsePoolMode = ClosedEnum<
  typeof UpdateSupavisorConfigResponsePoolMode
>;

export type UpdateSupavisorConfigResponse = {
  defaultPoolSize: number | null;
  poolMode: UpdateSupavisorConfigResponsePoolMode;
};

/** @internal */
export const UpdateSupavisorConfigResponsePoolMode$inboundSchema:
  z.ZodNativeEnum<typeof UpdateSupavisorConfigResponsePoolMode> = z.nativeEnum(
    UpdateSupavisorConfigResponsePoolMode,
  );

/** @internal */
export const UpdateSupavisorConfigResponsePoolMode$outboundSchema:
  z.ZodNativeEnum<typeof UpdateSupavisorConfigResponsePoolMode> =
    UpdateSupavisorConfigResponsePoolMode$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UpdateSupavisorConfigResponsePoolMode$ {
  /** @deprecated use `UpdateSupavisorConfigResponsePoolMode$inboundSchema` instead. */
  export const inboundSchema =
    UpdateSupavisorConfigResponsePoolMode$inboundSchema;
  /** @deprecated use `UpdateSupavisorConfigResponsePoolMode$outboundSchema` instead. */
  export const outboundSchema =
    UpdateSupavisorConfigResponsePoolMode$outboundSchema;
}

/** @internal */
export const UpdateSupavisorConfigResponse$inboundSchema: z.ZodType<
  UpdateSupavisorConfigResponse,
  z.ZodTypeDef,
  unknown
> = z.object({
  default_pool_size: z.nullable(z.number().int()),
  pool_mode: UpdateSupavisorConfigResponsePoolMode$inboundSchema,
}).transform((v) => {
  return remap$(v, {
    "default_pool_size": "defaultPoolSize",
    "pool_mode": "poolMode",
  });
});

/** @internal */
export type UpdateSupavisorConfigResponse$Outbound = {
  default_pool_size: number | null;
  pool_mode: string;
};

/** @internal */
export const UpdateSupavisorConfigResponse$outboundSchema: z.ZodType<
  UpdateSupavisorConfigResponse$Outbound,
  z.ZodTypeDef,
  UpdateSupavisorConfigResponse
> = z.object({
  defaultPoolSize: z.nullable(z.number().int()),
  poolMode: UpdateSupavisorConfigResponsePoolMode$outboundSchema,
}).transform((v) => {
  return remap$(v, {
    defaultPoolSize: "default_pool_size",
    poolMode: "pool_mode",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UpdateSupavisorConfigResponse$ {
  /** @deprecated use `UpdateSupavisorConfigResponse$inboundSchema` instead. */
  export const inboundSchema = UpdateSupavisorConfigResponse$inboundSchema;
  /** @deprecated use `UpdateSupavisorConfigResponse$outboundSchema` instead. */
  export const outboundSchema = UpdateSupavisorConfigResponse$outboundSchema;
  /** @deprecated use `UpdateSupavisorConfigResponse$Outbound` instead. */
  export type Outbound = UpdateSupavisorConfigResponse$Outbound;
}

export function updateSupavisorConfigResponseToJSON(
  updateSupavisorConfigResponse: UpdateSupavisorConfigResponse,
): string {
  return JSON.stringify(
    UpdateSupavisorConfigResponse$outboundSchema.parse(
      updateSupavisorConfigResponse,
    ),
  );
}

export function updateSupavisorConfigResponseFromJSON(
  jsonString: string,
): SafeParseResult<UpdateSupavisorConfigResponse, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => UpdateSupavisorConfigResponse$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'UpdateSupavisorConfigResponse' from JSON`,
  );
}
