/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { ClosedEnum } from "../../types/enums.js";

export const DesiredInstanceSize = {
  Micro: "micro",
  Small: "small",
  Medium: "medium",
  Large: "large",
  Xlarge: "xlarge",
  Twoxlarge: "2xlarge",
  Fourxlarge: "4xlarge",
  Eightxlarge: "8xlarge",
  Twelvexlarge: "12xlarge",
  Sixteenxlarge: "16xlarge",
} as const;
export type DesiredInstanceSize = ClosedEnum<typeof DesiredInstanceSize>;

/** @internal */
export const DesiredInstanceSize$inboundSchema: z.ZodNativeEnum<
  typeof DesiredInstanceSize
> = z.nativeEnum(DesiredInstanceSize);

/** @internal */
export const DesiredInstanceSize$outboundSchema: z.ZodNativeEnum<
  typeof DesiredInstanceSize
> = DesiredInstanceSize$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DesiredInstanceSize$ {
  /** @deprecated use `DesiredInstanceSize$inboundSchema` instead. */
  export const inboundSchema = DesiredInstanceSize$inboundSchema;
  /** @deprecated use `DesiredInstanceSize$outboundSchema` instead. */
  export const outboundSchema = DesiredInstanceSize$outboundSchema;
}
