// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type VanitySubdomainConfigResponseStatusEnum string

const (
	VanitySubdomainConfigResponseStatusEnumNotUsed          VanitySubdomainConfigResponseStatusEnum = "not-used"
	VanitySubdomainConfigResponseStatusEnumCustomDomainUsed VanitySubdomainConfigResponseStatusEnum = "custom-domain-used"
	VanitySubdomainConfigResponseStatusEnumActive           VanitySubdomainConfigResponseStatusEnum = "active"
)

func (e VanitySubdomainConfigResponseStatusEnum) ToPointer() *VanitySubdomainConfigResponseStatusEnum {
	return &e
}

func (e *VanitySubdomainConfigResponseStatusEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "not-used":
		fallthrough
	case "custom-domain-used":
		fallthrough
	case "active":
		*e = VanitySubdomainConfigResponseStatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for VanitySubdomainConfigResponseStatusEnum: %v", v)
	}
}

type VanitySubdomainConfigResponse struct {
	CustomDomain *string                                 `json:"custom_domain,omitempty"`
	Status       VanitySubdomainConfigResponseStatusEnum `json:"status"`
}
