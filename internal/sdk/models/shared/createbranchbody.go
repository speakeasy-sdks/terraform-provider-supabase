// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package shared

type CreateBranchBody struct {
	DesiredInstanceSize *DesiredInstanceSize `json:"desired_instance_size,omitempty"`
	ReleaseChannel      *ReleaseChannel      `json:"release_channel,omitempty"`
	// Postgres engine version. If not provided, the latest version will be used.
	PostgresEngine *PostgresEngine `json:"postgres_engine,omitempty"`
	BranchName     string          `json:"branch_name"`
	GitBranch      *string         `json:"git_branch,omitempty"`
	Persistent     *bool           `json:"persistent,omitempty"`
	Region         *string         `json:"region,omitempty"`
}

func (o *CreateBranchBody) GetDesiredInstanceSize() *DesiredInstanceSize {
	if o == nil {
		return nil
	}
	return o.DesiredInstanceSize
}

func (o *CreateBranchBody) GetReleaseChannel() *ReleaseChannel {
	if o == nil {
		return nil
	}
	return o.ReleaseChannel
}

func (o *CreateBranchBody) GetPostgresEngine() *PostgresEngine {
	if o == nil {
		return nil
	}
	return o.PostgresEngine
}

func (o *CreateBranchBody) GetBranchName() string {
	if o == nil {
		return ""
	}
	return o.BranchName
}

func (o *CreateBranchBody) GetGitBranch() *string {
	if o == nil {
		return nil
	}
	return o.GitBranch
}

func (o *CreateBranchBody) GetPersistent() *bool {
	if o == nil {
		return nil
	}
	return o.Persistent
}

func (o *CreateBranchBody) GetRegion() *string {
	if o == nil {
		return nil
	}
	return o.Region
}
