// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package provider

import (
	"github.com/hashicorp/terraform-plugin-framework/types"
	tfTypes "github.com/speakeasy/terraform-provider-supabase/internal/provider/types"
	"github.com/speakeasy/terraform-provider-supabase/internal/sdk/models/shared"
)

func (r *PoolerDataSourceModel) RefreshFromSharedSupavisorConfigResponse(resp []shared.SupavisorConfigResponse) {
	r.Data = []tfTypes.SupavisorConfigResponse{}
	if len(r.Data) > len(resp) {
		r.Data = r.Data[:len(resp)]
	}
	for dataCount, dataItem := range resp {
		var data tfTypes.SupavisorConfigResponse
		data.ConnectionString = types.StringValue(dataItem.ConnectionString)
		data.DatabaseType = types.StringValue(string(dataItem.DatabaseType))
		data.DbHost = types.StringValue(dataItem.DbHost)
		data.DbName = types.StringValue(dataItem.DbName)
		data.DbPort = types.Int64Value(dataItem.DbPort)
		data.DbUser = types.StringValue(dataItem.DbUser)
		data.DefaultPoolSize = types.Int64PointerValue(dataItem.DefaultPoolSize)
		data.Identifier = types.StringValue(dataItem.Identifier)
		data.IsUsingScramAuth = types.BoolValue(dataItem.IsUsingScramAuth)
		data.MaxClientConn = types.Int64PointerValue(dataItem.MaxClientConn)
		data.PoolMode = types.StringValue(string(dataItem.PoolMode))
		if dataCount+1 > len(r.Data) {
			r.Data = append(r.Data, data)
		} else {
			r.Data[dataCount].ConnectionString = data.ConnectionString
			r.Data[dataCount].DatabaseType = data.DatabaseType
			r.Data[dataCount].DbHost = data.DbHost
			r.Data[dataCount].DbName = data.DbName
			r.Data[dataCount].DbPort = data.DbPort
			r.Data[dataCount].DbUser = data.DbUser
			r.Data[dataCount].DefaultPoolSize = data.DefaultPoolSize
			r.Data[dataCount].Identifier = data.Identifier
			r.Data[dataCount].IsUsingScramAuth = data.IsUsingScramAuth
			r.Data[dataCount].MaxClientConn = data.MaxClientConn
			r.Data[dataCount].PoolMode = data.PoolMode
		}
	}
}
