// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type UpdateCustomHostnameResponseStatusEnum string

const (
	UpdateCustomHostnameResponseStatusEnumOneNotStarted            UpdateCustomHostnameResponseStatusEnum = "1_not_started"
	UpdateCustomHostnameResponseStatusEnumTwoInitiated             UpdateCustomHostnameResponseStatusEnum = "2_initiated"
	UpdateCustomHostnameResponseStatusEnumThreeChallengeVerified   UpdateCustomHostnameResponseStatusEnum = "3_challenge_verified"
	UpdateCustomHostnameResponseStatusEnumFourOriginSetupCompleted UpdateCustomHostnameResponseStatusEnum = "4_origin_setup_completed"
	UpdateCustomHostnameResponseStatusEnumFiveServicesReconfigured UpdateCustomHostnameResponseStatusEnum = "5_services_reconfigured"
)

func (e UpdateCustomHostnameResponseStatusEnum) ToPointer() *UpdateCustomHostnameResponseStatusEnum {
	return &e
}

func (e *UpdateCustomHostnameResponseStatusEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "1_not_started":
		fallthrough
	case "2_initiated":
		fallthrough
	case "3_challenge_verified":
		fallthrough
	case "4_origin_setup_completed":
		fallthrough
	case "5_services_reconfigured":
		*e = UpdateCustomHostnameResponseStatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for UpdateCustomHostnameResponseStatusEnum: %v", v)
	}
}

type UpdateCustomHostnameResponse struct {
	CustomHostname string                                 `json:"custom_hostname"`
	Data           map[string]interface{}                 `json:"data"`
	Status         UpdateCustomHostnameResponseStatusEnum `json:"status"`
}
