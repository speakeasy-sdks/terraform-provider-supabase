// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type VanitySubdomainConfigResponseStatus string

const (
	VanitySubdomainConfigResponseStatusNotUsed          VanitySubdomainConfigResponseStatus = "not-used"
	VanitySubdomainConfigResponseStatusCustomDomainUsed VanitySubdomainConfigResponseStatus = "custom-domain-used"
	VanitySubdomainConfigResponseStatusActive           VanitySubdomainConfigResponseStatus = "active"
)

func (e VanitySubdomainConfigResponseStatus) ToPointer() *VanitySubdomainConfigResponseStatus {
	return &e
}
func (e *VanitySubdomainConfigResponseStatus) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "not-used":
		fallthrough
	case "custom-domain-used":
		fallthrough
	case "active":
		*e = VanitySubdomainConfigResponseStatus(v)
		return nil
	default:
		return fmt.Errorf("invalid value for VanitySubdomainConfigResponseStatus: %v", v)
	}
}

type VanitySubdomainConfigResponse struct {
	Status       VanitySubdomainConfigResponseStatus `json:"status"`
	CustomDomain *string                             `json:"custom_domain,omitempty"`
}

func (o *VanitySubdomainConfigResponse) GetStatus() VanitySubdomainConfigResponseStatus {
	if o == nil {
		return VanitySubdomainConfigResponseStatus("")
	}
	return o.Status
}

func (o *VanitySubdomainConfigResponse) GetCustomDomain() *string {
	if o == nil {
		return nil
	}
	return o.CustomDomain
}
