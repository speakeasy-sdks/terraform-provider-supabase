// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type UpdateSupavisorConfigResponsePoolMode string

const (
	UpdateSupavisorConfigResponsePoolModeTransaction UpdateSupavisorConfigResponsePoolMode = "transaction"
	UpdateSupavisorConfigResponsePoolModeSession     UpdateSupavisorConfigResponsePoolMode = "session"
)

func (e UpdateSupavisorConfigResponsePoolMode) ToPointer() *UpdateSupavisorConfigResponsePoolMode {
	return &e
}
func (e *UpdateSupavisorConfigResponsePoolMode) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "transaction":
		fallthrough
	case "session":
		*e = UpdateSupavisorConfigResponsePoolMode(v)
		return nil
	default:
		return fmt.Errorf("invalid value for UpdateSupavisorConfigResponsePoolMode: %v", v)
	}
}

type UpdateSupavisorConfigResponse struct {
	DefaultPoolSize *int64                                `json:"default_pool_size"`
	PoolMode        UpdateSupavisorConfigResponsePoolMode `json:"pool_mode"`
}

func (o *UpdateSupavisorConfigResponse) GetDefaultPoolSize() *int64 {
	if o == nil {
		return nil
	}
	return o.DefaultPoolSize
}

func (o *UpdateSupavisorConfigResponse) GetPoolMode() UpdateSupavisorConfigResponsePoolMode {
	if o == nil {
		return UpdateSupavisorConfigResponsePoolMode("")
	}
	return o.PoolMode
}
