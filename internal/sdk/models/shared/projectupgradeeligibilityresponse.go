// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package shared

type ProjectUpgradeEligibilityResponse struct {
	CurrentAppVersionReleaseChannel ReleaseChannel   `json:"current_app_version_release_channel"`
	DurationEstimateHours           int64            `json:"duration_estimate_hours"`
	Eligible                        bool             `json:"eligible"`
	CurrentAppVersion               string           `json:"current_app_version"`
	LatestAppVersion                string           `json:"latest_app_version"`
	TargetUpgradeVersions           []ProjectVersion `json:"target_upgrade_versions"`
	PotentialBreakingChanges        []string         `json:"potential_breaking_changes"`
	LegacyAuthCustomRoles           []string         `json:"legacy_auth_custom_roles"`
	ExtensionDependentObjects       []string         `json:"extension_dependent_objects"`
}

func (o *ProjectUpgradeEligibilityResponse) GetCurrentAppVersionReleaseChannel() ReleaseChannel {
	if o == nil {
		return ReleaseChannel("")
	}
	return o.CurrentAppVersionReleaseChannel
}

func (o *ProjectUpgradeEligibilityResponse) GetDurationEstimateHours() int64 {
	if o == nil {
		return 0
	}
	return o.DurationEstimateHours
}

func (o *ProjectUpgradeEligibilityResponse) GetEligible() bool {
	if o == nil {
		return false
	}
	return o.Eligible
}

func (o *ProjectUpgradeEligibilityResponse) GetCurrentAppVersion() string {
	if o == nil {
		return ""
	}
	return o.CurrentAppVersion
}

func (o *ProjectUpgradeEligibilityResponse) GetLatestAppVersion() string {
	if o == nil {
		return ""
	}
	return o.LatestAppVersion
}

func (o *ProjectUpgradeEligibilityResponse) GetTargetUpgradeVersions() []ProjectVersion {
	if o == nil {
		return []ProjectVersion{}
	}
	return o.TargetUpgradeVersions
}

func (o *ProjectUpgradeEligibilityResponse) GetPotentialBreakingChanges() []string {
	if o == nil {
		return []string{}
	}
	return o.PotentialBreakingChanges
}

func (o *ProjectUpgradeEligibilityResponse) GetLegacyAuthCustomRoles() []string {
	if o == nil {
		return []string{}
	}
	return o.LegacyAuthCustomRoles
}

func (o *ProjectUpgradeEligibilityResponse) GetExtensionDependentObjects() []string {
	if o == nil {
		return []string{}
	}
	return o.ExtensionDependentObjects
}
