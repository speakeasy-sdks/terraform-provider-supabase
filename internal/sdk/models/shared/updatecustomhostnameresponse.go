// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type UpdateCustomHostnameResponseStatus string

const (
	UpdateCustomHostnameResponseStatusOneNotStarted            UpdateCustomHostnameResponseStatus = "1_not_started"
	UpdateCustomHostnameResponseStatusTwoInitiated             UpdateCustomHostnameResponseStatus = "2_initiated"
	UpdateCustomHostnameResponseStatusThreeChallengeVerified   UpdateCustomHostnameResponseStatus = "3_challenge_verified"
	UpdateCustomHostnameResponseStatusFourOriginSetupCompleted UpdateCustomHostnameResponseStatus = "4_origin_setup_completed"
	UpdateCustomHostnameResponseStatusFiveServicesReconfigured UpdateCustomHostnameResponseStatus = "5_services_reconfigured"
)

func (e UpdateCustomHostnameResponseStatus) ToPointer() *UpdateCustomHostnameResponseStatus {
	return &e
}
func (e *UpdateCustomHostnameResponseStatus) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "1_not_started":
		fallthrough
	case "2_initiated":
		fallthrough
	case "3_challenge_verified":
		fallthrough
	case "4_origin_setup_completed":
		fallthrough
	case "5_services_reconfigured":
		*e = UpdateCustomHostnameResponseStatus(v)
		return nil
	default:
		return fmt.Errorf("invalid value for UpdateCustomHostnameResponseStatus: %v", v)
	}
}

type UpdateCustomHostnameResponse struct {
	Status         UpdateCustomHostnameResponseStatus `json:"status"`
	CustomHostname string                             `json:"custom_hostname"`
	Data           CfResponse                         `json:"data"`
}

func (o *UpdateCustomHostnameResponse) GetStatus() UpdateCustomHostnameResponseStatus {
	if o == nil {
		return UpdateCustomHostnameResponseStatus("")
	}
	return o.Status
}

func (o *UpdateCustomHostnameResponse) GetCustomHostname() string {
	if o == nil {
		return ""
	}
	return o.CustomHostname
}

func (o *UpdateCustomHostnameResponse) GetData() CfResponse {
	if o == nil {
		return CfResponse{}
	}
	return o.Data
}
