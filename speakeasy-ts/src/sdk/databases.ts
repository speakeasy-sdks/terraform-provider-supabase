/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { databasesGenerateTypescriptTypes } from "../funcs/databasesGenerateTypescriptTypes.js";
import { databasesUpdatePostgresConfig } from "../funcs/databasesUpdatePostgresConfig.js";
import { databasesUpdateSupavisorConfig } from "../funcs/databasesUpdateSupavisorConfig.js";
import { ClientSDK, RequestOptions } from "../lib/sdks.js";
import * as components from "../models/components/index.js";
import * as operations from "../models/operations/index.js";
import { unwrapAsync } from "../types/fp.js";

export class Databases extends ClientSDK {
  /**
   * Generate TypeScript types
   *
   * @remarks
   * Returns the TypeScript types of your schema for use with supabase-js.
   */
  async generateTypescriptTypes(
    request: operations.V1GenerateTypescriptTypesRequest,
    options?: RequestOptions,
  ): Promise<components.TypescriptResponse> {
    return unwrapAsync(databasesGenerateTypescriptTypes(
      this,
      request,
      options,
    ));
  }

  /**
   * Updates project's Postgres config
   */
  async updatePostgresConfig(
    request: operations.V1UpdatePostgresConfigRequest,
    options?: RequestOptions,
  ): Promise<components.PostgresConfigResponse> {
    return unwrapAsync(databasesUpdatePostgresConfig(
      this,
      request,
      options,
    ));
  }

  /**
   * Updates project's supavisor config
   */
  async updateSupavisorConfig(
    request: operations.V1UpdateSupavisorConfigRequest,
    options?: RequestOptions,
  ): Promise<components.UpdateSupavisorConfigResponse> {
    return unwrapAsync(databasesUpdateSupavisorConfig(
      this,
      request,
      options,
    ));
  }
}
