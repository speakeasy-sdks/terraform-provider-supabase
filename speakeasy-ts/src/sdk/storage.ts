/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { storageGetConfig } from "../funcs/storageGetConfig.js";
import { storageListBuckets } from "../funcs/storageListBuckets.js";
import { storagePatchConfig } from "../funcs/storagePatchConfig.js";
import { ClientSDK, RequestOptions } from "../lib/sdks.js";
import * as components from "../models/components/index.js";
import * as operations from "../models/operations/index.js";
import { unwrapAsync } from "../types/fp.js";

export class Storage extends ClientSDK {
  /**
   * Gets project's storage config
   */
  async getConfig(
    request: operations.V1GetStorageConfigRequest,
    options?: RequestOptions,
  ): Promise<components.StorageConfigResponse> {
    return unwrapAsync(storageGetConfig(
      this,
      request,
      options,
    ));
  }

  /**
   * Updates project's storage config
   */
  async patchConfig(
    request: operations.V1UpdateStorageConfigRequest,
    options?: RequestOptions,
  ): Promise<void> {
    return unwrapAsync(storagePatchConfig(
      this,
      request,
      options,
    ));
  }

  /**
   * Lists all buckets
   */
  async listBuckets(
    request: operations.V1ListAllBucketsRequest,
    options?: RequestOptions,
  ): Promise<Array<components.V1StorageBucketResponse>> {
    return unwrapAsync(storageListBuckets(
      this,
      request,
      options,
    ));
  }
}
