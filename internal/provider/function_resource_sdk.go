// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package provider

import (
	"github.com/hashicorp/terraform-plugin-framework/types"
	"github.com/speakeasy/terraform-provider-supabase/internal/sdk/models/shared"
	"math/big"
)

func (r *FunctionResourceModel) ToSharedV1CreateFunctionBody() *shared.V1CreateFunctionBody {
	var slug string
	slug = r.Slug.ValueString()

	var name string
	name = r.Name.ValueString()

	var body string
	body = r.Body.ValueString()

	verifyJwt := new(bool)
	if !r.VerifyJwt.IsUnknown() && !r.VerifyJwt.IsNull() {
		*verifyJwt = r.VerifyJwt.ValueBool()
	} else {
		verifyJwt = nil
	}
	computeMultiplier := new(float64)
	if !r.ComputeMultiplier.IsUnknown() && !r.ComputeMultiplier.IsNull() {
		*computeMultiplier, _ = r.ComputeMultiplier.ValueBigFloat().Float64()
	} else {
		computeMultiplier = nil
	}
	out := shared.V1CreateFunctionBody{
		Slug:              slug,
		Name:              name,
		Body:              body,
		VerifyJwt:         verifyJwt,
		ComputeMultiplier: computeMultiplier,
	}
	return &out
}

func (r *FunctionResourceModel) RefreshFromSharedFunctionResponse(resp *shared.FunctionResponse) {
	if resp != nil {
		if resp.ComputeMultiplier != nil {
			r.ComputeMultiplier = types.NumberValue(big.NewFloat(float64(*resp.ComputeMultiplier)))
		} else {
			r.ComputeMultiplier = types.NumberNull()
		}
		r.CreatedAt = types.Int64Value(resp.CreatedAt)
		r.EntrypointPath = types.StringPointerValue(resp.EntrypointPath)
		r.ID = types.StringValue(resp.ID)
		r.ImportMap = types.BoolPointerValue(resp.ImportMap)
		r.ImportMapPath = types.StringPointerValue(resp.ImportMapPath)
		r.Name = types.StringValue(resp.Name)
		r.Slug = types.StringValue(resp.Slug)
		r.Status = types.StringValue(string(resp.Status))
		r.UpdatedAt = types.Int64Value(resp.UpdatedAt)
		r.VerifyJwt = types.BoolPointerValue(resp.VerifyJwt)
		r.Version = types.Int64Value(resp.Version)
	}
}

func (r *FunctionResourceModel) RefreshFromSharedFunctionSlugResponse(resp *shared.FunctionSlugResponse) {
	if resp != nil {
		if resp.ComputeMultiplier != nil {
			r.ComputeMultiplier = types.NumberValue(big.NewFloat(float64(*resp.ComputeMultiplier)))
		} else {
			r.ComputeMultiplier = types.NumberNull()
		}
		r.CreatedAt = types.Int64Value(resp.CreatedAt)
		r.EntrypointPath = types.StringPointerValue(resp.EntrypointPath)
		r.ID = types.StringValue(resp.ID)
		r.ImportMap = types.BoolPointerValue(resp.ImportMap)
		r.ImportMapPath = types.StringPointerValue(resp.ImportMapPath)
		r.Name = types.StringValue(resp.Name)
		r.Slug = types.StringValue(resp.Slug)
		r.Status = types.StringValue(string(resp.Status))
		r.UpdatedAt = types.Int64Value(resp.UpdatedAt)
		r.VerifyJwt = types.BoolPointerValue(resp.VerifyJwt)
		r.Version = types.Int64Value(resp.Version)
	}
}

func (r *FunctionResourceModel) ToSharedV1UpdateFunctionBody() *shared.V1UpdateFunctionBody {
	name := new(string)
	if !r.Name.IsUnknown() && !r.Name.IsNull() {
		*name = r.Name.ValueString()
	} else {
		name = nil
	}
	body := new(string)
	if !r.Body.IsUnknown() && !r.Body.IsNull() {
		*body = r.Body.ValueString()
	} else {
		body = nil
	}
	verifyJwt := new(bool)
	if !r.VerifyJwt.IsUnknown() && !r.VerifyJwt.IsNull() {
		*verifyJwt = r.VerifyJwt.ValueBool()
	} else {
		verifyJwt = nil
	}
	computeMultiplier := new(float64)
	if !r.ComputeMultiplier.IsUnknown() && !r.ComputeMultiplier.IsNull() {
		*computeMultiplier, _ = r.ComputeMultiplier.ValueBigFloat().Float64()
	} else {
		computeMultiplier = nil
	}
	out := shared.V1UpdateFunctionBody{
		Name:              name,
		Body:              body,
		VerifyJwt:         verifyJwt,
		ComputeMultiplier: computeMultiplier,
	}
	return &out
}
