// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package provider

import (
	"github.com/hashicorp/terraform-plugin-framework/types"
	"github.com/speakeasy/terraform-provider-supabase/internal/sdk/models/shared"
)

func (r *ProjectResourceModel) ToSharedV1CreateProjectBodyDto() *shared.V1CreateProjectBodyDto {
	var dbPass string
	dbPass = r.DbPass.ValueString()

	var name string
	name = r.Name.ValueString()

	var organizationID string
	organizationID = r.OrganizationID.ValueString()

	region := shared.Region(r.Region.ValueString())
	desiredInstanceSize := new(shared.DesiredInstanceSize)
	if !r.DesiredInstanceSize.IsUnknown() && !r.DesiredInstanceSize.IsNull() {
		*desiredInstanceSize = shared.DesiredInstanceSize(r.DesiredInstanceSize.ValueString())
	} else {
		desiredInstanceSize = nil
	}
	templateURL := new(string)
	if !r.TemplateURL.IsUnknown() && !r.TemplateURL.IsNull() {
		*templateURL = r.TemplateURL.ValueString()
	} else {
		templateURL = nil
	}
	releaseChannel := new(shared.V1CreateProjectBodyDtoReleaseChannel)
	if !r.ReleaseChannel.IsUnknown() && !r.ReleaseChannel.IsNull() {
		*releaseChannel = shared.V1CreateProjectBodyDtoReleaseChannel(r.ReleaseChannel.ValueString())
	} else {
		releaseChannel = nil
	}
	postgresEngine := new(shared.V1CreateProjectBodyDtoPostgresEngine)
	if !r.PostgresEngine.IsUnknown() && !r.PostgresEngine.IsNull() {
		*postgresEngine = shared.V1CreateProjectBodyDtoPostgresEngine(r.PostgresEngine.ValueString())
	} else {
		postgresEngine = nil
	}
	out := shared.V1CreateProjectBodyDto{
		DbPass:              dbPass,
		Name:                name,
		OrganizationID:      organizationID,
		Region:              region,
		DesiredInstanceSize: desiredInstanceSize,
		TemplateURL:         templateURL,
		ReleaseChannel:      releaseChannel,
		PostgresEngine:      postgresEngine,
	}
	return &out
}

func (r *ProjectResourceModel) RefreshFromSharedV1ProjectResponse(resp *shared.V1ProjectResponse) {
	if resp != nil {
		r.CreatedAt = types.StringValue(resp.CreatedAt)
		r.ID = types.StringValue(resp.ID)
		r.Name = types.StringValue(resp.Name)
		r.OrganizationID = types.StringValue(resp.OrganizationID)
		r.Region = types.StringValue(string(resp.Region))
		r.Status = types.StringValue(string(resp.Status))
	}
}

func (r *ProjectResourceModel) RefreshFromSharedV1ProjectWithDatabaseResponse(resp *shared.V1ProjectWithDatabaseResponse) {
	if resp != nil {
		r.CreatedAt = types.StringValue(resp.CreatedAt)
		r.Database.Host = types.StringValue(resp.Database.Host)
		r.Database.Version = types.StringValue(resp.Database.Version)
		r.Database.PostgresEngine = types.StringValue(resp.Database.PostgresEngine)
		r.Database.ReleaseChannel = types.StringValue(resp.Database.ReleaseChannel)
		r.ID = types.StringValue(resp.ID)
		r.Name = types.StringValue(resp.Name)
		r.OrganizationID = types.StringValue(resp.OrganizationID)
		r.Region = types.StringValue(string(resp.Region))
		r.Status = types.StringValue(string(resp.Status))
	}
}
