/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type BranchDeleteResponse = {
  message: string;
};

/** @internal */
export const BranchDeleteResponse$inboundSchema: z.ZodType<
  BranchDeleteResponse,
  z.ZodTypeDef,
  unknown
> = z.object({
  message: z.string(),
});

/** @internal */
export type BranchDeleteResponse$Outbound = {
  message: string;
};

/** @internal */
export const BranchDeleteResponse$outboundSchema: z.ZodType<
  BranchDeleteResponse$Outbound,
  z.ZodTypeDef,
  BranchDeleteResponse
> = z.object({
  message: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace BranchDeleteResponse$ {
  /** @deprecated use `BranchDeleteResponse$inboundSchema` instead. */
  export const inboundSchema = BranchDeleteResponse$inboundSchema;
  /** @deprecated use `BranchDeleteResponse$outboundSchema` instead. */
  export const outboundSchema = BranchDeleteResponse$outboundSchema;
  /** @deprecated use `BranchDeleteResponse$Outbound` instead. */
  export type Outbound = BranchDeleteResponse$Outbound;
}

export function branchDeleteResponseToJSON(
  branchDeleteResponse: BranchDeleteResponse,
): string {
  return JSON.stringify(
    BranchDeleteResponse$outboundSchema.parse(branchDeleteResponse),
  );
}

export function branchDeleteResponseFromJSON(
  jsonString: string,
): SafeParseResult<BranchDeleteResponse, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => BranchDeleteResponse$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'BranchDeleteResponse' from JSON`,
  );
}
