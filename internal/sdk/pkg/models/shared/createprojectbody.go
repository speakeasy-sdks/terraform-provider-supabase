// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// CreateProjectBodyPlanEnum - Subscription plan
type CreateProjectBodyPlanEnum string

const (
	CreateProjectBodyPlanEnumFree CreateProjectBodyPlanEnum = "free"
	CreateProjectBodyPlanEnumPro  CreateProjectBodyPlanEnum = "pro"
)

func (e CreateProjectBodyPlanEnum) ToPointer() *CreateProjectBodyPlanEnum {
	return &e
}

func (e *CreateProjectBodyPlanEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "free":
		fallthrough
	case "pro":
		*e = CreateProjectBodyPlanEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for CreateProjectBodyPlanEnum: %v", v)
	}
}

// CreateProjectBodyRegionEnum - Region you want your server to reside in
type CreateProjectBodyRegionEnum string

const (
	CreateProjectBodyRegionEnumUsEast1      CreateProjectBodyRegionEnum = "us-east-1"
	CreateProjectBodyRegionEnumUsWest1      CreateProjectBodyRegionEnum = "us-west-1"
	CreateProjectBodyRegionEnumUsWest2      CreateProjectBodyRegionEnum = "us-west-2"
	CreateProjectBodyRegionEnumApSoutheast1 CreateProjectBodyRegionEnum = "ap-southeast-1"
	CreateProjectBodyRegionEnumApNortheast1 CreateProjectBodyRegionEnum = "ap-northeast-1"
	CreateProjectBodyRegionEnumApNortheast2 CreateProjectBodyRegionEnum = "ap-northeast-2"
	CreateProjectBodyRegionEnumApSoutheast2 CreateProjectBodyRegionEnum = "ap-southeast-2"
	CreateProjectBodyRegionEnumEuWest1      CreateProjectBodyRegionEnum = "eu-west-1"
	CreateProjectBodyRegionEnumEuWest2      CreateProjectBodyRegionEnum = "eu-west-2"
	CreateProjectBodyRegionEnumEuWest3      CreateProjectBodyRegionEnum = "eu-west-3"
	CreateProjectBodyRegionEnumEuCentral1   CreateProjectBodyRegionEnum = "eu-central-1"
	CreateProjectBodyRegionEnumCaCentral1   CreateProjectBodyRegionEnum = "ca-central-1"
	CreateProjectBodyRegionEnumApSouth1     CreateProjectBodyRegionEnum = "ap-south-1"
	CreateProjectBodyRegionEnumSaEast1      CreateProjectBodyRegionEnum = "sa-east-1"
)

func (e CreateProjectBodyRegionEnum) ToPointer() *CreateProjectBodyRegionEnum {
	return &e
}

func (e *CreateProjectBodyRegionEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "us-east-1":
		fallthrough
	case "us-west-1":
		fallthrough
	case "us-west-2":
		fallthrough
	case "ap-southeast-1":
		fallthrough
	case "ap-northeast-1":
		fallthrough
	case "ap-northeast-2":
		fallthrough
	case "ap-southeast-2":
		fallthrough
	case "eu-west-1":
		fallthrough
	case "eu-west-2":
		fallthrough
	case "eu-west-3":
		fallthrough
	case "eu-central-1":
		fallthrough
	case "ca-central-1":
		fallthrough
	case "ap-south-1":
		fallthrough
	case "sa-east-1":
		*e = CreateProjectBodyRegionEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for CreateProjectBodyRegionEnum: %v", v)
	}
}

type CreateProjectBody struct {
	// Database password
	DbPass     string `json:"db_pass"`
	KpsEnabled *bool  `json:"kps_enabled,omitempty"`
	// Name of your project, should not contain dots
	Name string `json:"name"`
	// Slug of your organization
	OrganizationID string `json:"organization_id"`
	// Subscription plan
	Plan CreateProjectBodyPlanEnum `json:"plan"`
	// Region you want your server to reside in
	Region CreateProjectBodyRegionEnum `json:"region"`
}
