// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type NetworkRestrictionsResponseEntitlementEnum string

const (
	NetworkRestrictionsResponseEntitlementEnumDisallowed NetworkRestrictionsResponseEntitlementEnum = "disallowed"
	NetworkRestrictionsResponseEntitlementEnumAllowed    NetworkRestrictionsResponseEntitlementEnum = "allowed"
)

func (e NetworkRestrictionsResponseEntitlementEnum) ToPointer() *NetworkRestrictionsResponseEntitlementEnum {
	return &e
}

func (e *NetworkRestrictionsResponseEntitlementEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "disallowed":
		fallthrough
	case "allowed":
		*e = NetworkRestrictionsResponseEntitlementEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for NetworkRestrictionsResponseEntitlementEnum: %v", v)
	}
}

type NetworkRestrictionsResponseStatusEnum string

const (
	NetworkRestrictionsResponseStatusEnumStored  NetworkRestrictionsResponseStatusEnum = "stored"
	NetworkRestrictionsResponseStatusEnumApplied NetworkRestrictionsResponseStatusEnum = "applied"
)

func (e NetworkRestrictionsResponseStatusEnum) ToPointer() *NetworkRestrictionsResponseStatusEnum {
	return &e
}

func (e *NetworkRestrictionsResponseStatusEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "stored":
		fallthrough
	case "applied":
		*e = NetworkRestrictionsResponseStatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for NetworkRestrictionsResponseStatusEnum: %v", v)
	}
}

type NetworkRestrictionsResponse struct {
	Config      NetworkRestrictionsRequest                 `json:"config"`
	Entitlement NetworkRestrictionsResponseEntitlementEnum `json:"entitlement"`
	OldConfig   *NetworkRestrictionsRequest                `json:"old_config,omitempty"`
	Status      NetworkRestrictionsResponseStatusEnum      `json:"status"`
}
