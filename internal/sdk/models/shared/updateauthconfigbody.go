// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type PasswordRequiredCharacters string

const (
	PasswordRequiredCharactersAbcdefghijklmnopqrstuvwxyzAbcdefghijklmnopqrstuvwxyz0123456789                                                             PasswordRequiredCharacters = "abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ:0123456789"
	PasswordRequiredCharactersAbcdefghijklmnopqrstuvwxyzAbcdefghijklmnopqrstuvwxyz0123456789AtNumberDollarPercentAndWildcardPlusEqualLessThanGreaterThan PasswordRequiredCharacters = "abcdefghijklmnopqrstuvwxyz:ABCDEFGHIJKLMNOPQRSTUVWXYZ:0123456789:!@#$%^&*()_+-=[]{};'\\\\:\\\"|<>?,./`~"
	PasswordRequiredCharactersUnknown                                                                                                                    PasswordRequiredCharacters = ""
)

func (e PasswordRequiredCharacters) ToPointer() *PasswordRequiredCharacters {
	return &e
}
func (e *PasswordRequiredCharacters) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ:0123456789":
		fallthrough
	case "abcdefghijklmnopqrstuvwxyz:ABCDEFGHIJKLMNOPQRSTUVWXYZ:0123456789:!@#$%^&*()_+-=[]{};'\\\\:\\\"|<>?,./`~":
		fallthrough
	case "":
		*e = PasswordRequiredCharacters(v)
		return nil
	default:
		return fmt.Errorf("invalid value for PasswordRequiredCharacters: %v", v)
	}
}

type UpdateAuthConfigBody struct {
	JwtExp                                        *int64                      `json:"jwt_exp,omitempty"`
	SMTPMaxFrequency                              *int64                      `json:"smtp_max_frequency,omitempty"`
	MfaMaxEnrolledFactors                         *int64                      `json:"mfa_max_enrolled_factors,omitempty"`
	SessionsTimebox                               *int64                      `json:"sessions_timebox,omitempty"`
	SessionsInactivityTimeout                     *int64                      `json:"sessions_inactivity_timeout,omitempty"`
	RateLimitAnonymousUsers                       *int64                      `json:"rate_limit_anonymous_users,omitempty"`
	RateLimitEmailSent                            *int64                      `json:"rate_limit_email_sent,omitempty"`
	RateLimitSmsSent                              *int64                      `json:"rate_limit_sms_sent,omitempty"`
	RateLimitVerify                               *int64                      `json:"rate_limit_verify,omitempty"`
	RateLimitTokenRefresh                         *int64                      `json:"rate_limit_token_refresh,omitempty"`
	RateLimitOtp                                  *int64                      `json:"rate_limit_otp,omitempty"`
	PasswordMinLength                             *int64                      `json:"password_min_length,omitempty"`
	SecurityRefreshTokenReuseInterval             *int64                      `json:"security_refresh_token_reuse_interval,omitempty"`
	MailerOtpExp                                  *int64                      `json:"mailer_otp_exp,omitempty"`
	MailerOtpLength                               *int64                      `json:"mailer_otp_length,omitempty"`
	SmsMaxFrequency                               *int64                      `json:"sms_max_frequency,omitempty"`
	SmsOtpExp                                     *int64                      `json:"sms_otp_exp,omitempty"`
	SmsOtpLength                                  *int64                      `json:"sms_otp_length,omitempty"`
	DbMaxPoolSize                                 *int64                      `json:"db_max_pool_size,omitempty"`
	APIMaxRequestDuration                         *int64                      `json:"api_max_request_duration,omitempty"`
	MfaPhoneMaxFrequency                          *int64                      `json:"mfa_phone_max_frequency,omitempty"`
	MfaPhoneOtpLength                             *int64                      `json:"mfa_phone_otp_length,omitempty"`
	SiteURL                                       *string                     `json:"site_url,omitempty"`
	DisableSignup                                 *bool                       `json:"disable_signup,omitempty"`
	SMTPAdminEmail                                *string                     `json:"smtp_admin_email,omitempty"`
	SMTPHost                                      *string                     `json:"smtp_host,omitempty"`
	SMTPPort                                      *string                     `json:"smtp_port,omitempty"`
	SMTPUser                                      *string                     `json:"smtp_user,omitempty"`
	SMTPPass                                      *string                     `json:"smtp_pass,omitempty"`
	SMTPSenderName                                *string                     `json:"smtp_sender_name,omitempty"`
	MailerAllowUnverifiedEmailSignIns             *bool                       `json:"mailer_allow_unverified_email_sign_ins,omitempty"`
	MailerAutoconfirm                             *bool                       `json:"mailer_autoconfirm,omitempty"`
	MailerSubjectsInvite                          *string                     `json:"mailer_subjects_invite,omitempty"`
	MailerSubjectsConfirmation                    *string                     `json:"mailer_subjects_confirmation,omitempty"`
	MailerSubjectsRecovery                        *string                     `json:"mailer_subjects_recovery,omitempty"`
	MailerSubjectsEmailChange                     *string                     `json:"mailer_subjects_email_change,omitempty"`
	MailerSubjectsMagicLink                       *string                     `json:"mailer_subjects_magic_link,omitempty"`
	MailerSubjectsReauthentication                *string                     `json:"mailer_subjects_reauthentication,omitempty"`
	MailerTemplatesInviteContent                  *string                     `json:"mailer_templates_invite_content,omitempty"`
	MailerTemplatesConfirmationContent            *string                     `json:"mailer_templates_confirmation_content,omitempty"`
	MailerTemplatesRecoveryContent                *string                     `json:"mailer_templates_recovery_content,omitempty"`
	MailerTemplatesEmailChangeContent             *string                     `json:"mailer_templates_email_change_content,omitempty"`
	MailerTemplatesMagicLinkContent               *string                     `json:"mailer_templates_magic_link_content,omitempty"`
	MailerTemplatesReauthenticationContent        *string                     `json:"mailer_templates_reauthentication_content,omitempty"`
	URIAllowList                                  *string                     `json:"uri_allow_list,omitempty"`
	ExternalAnonymousUsersEnabled                 *bool                       `json:"external_anonymous_users_enabled,omitempty"`
	ExternalEmailEnabled                          *bool                       `json:"external_email_enabled,omitempty"`
	ExternalPhoneEnabled                          *bool                       `json:"external_phone_enabled,omitempty"`
	SamlEnabled                                   *bool                       `json:"saml_enabled,omitempty"`
	SamlExternalURL                               *string                     `json:"saml_external_url,omitempty"`
	SecurityCaptchaEnabled                        *bool                       `json:"security_captcha_enabled,omitempty"`
	SecurityCaptchaProvider                       *string                     `json:"security_captcha_provider,omitempty"`
	SecurityCaptchaSecret                         *string                     `json:"security_captcha_secret,omitempty"`
	SessionsSinglePerUser                         *bool                       `json:"sessions_single_per_user,omitempty"`
	SessionsTags                                  *string                     `json:"sessions_tags,omitempty"`
	MailerSecureEmailChangeEnabled                *bool                       `json:"mailer_secure_email_change_enabled,omitempty"`
	RefreshTokenRotationEnabled                   *bool                       `json:"refresh_token_rotation_enabled,omitempty"`
	PasswordHibpEnabled                           *bool                       `json:"password_hibp_enabled,omitempty"`
	PasswordRequiredCharacters                    *PasswordRequiredCharacters `json:"password_required_characters,omitempty"`
	SecurityManualLinkingEnabled                  *bool                       `json:"security_manual_linking_enabled,omitempty"`
	SecurityUpdatePasswordRequireReauthentication *bool                       `json:"security_update_password_require_reauthentication,omitempty"`
	SmsAutoconfirm                                *bool                       `json:"sms_autoconfirm,omitempty"`
	SmsProvider                                   *string                     `json:"sms_provider,omitempty"`
	SmsMessagebirdAccessKey                       *string                     `json:"sms_messagebird_access_key,omitempty"`
	SmsMessagebirdOriginator                      *string                     `json:"sms_messagebird_originator,omitempty"`
	SmsTestOtp                                    *string                     `json:"sms_test_otp,omitempty"`
	SmsTestOtpValidUntil                          *string                     `json:"sms_test_otp_valid_until,omitempty"`
	SmsTextlocalAPIKey                            *string                     `json:"sms_textlocal_api_key,omitempty"`
	SmsTextlocalSender                            *string                     `json:"sms_textlocal_sender,omitempty"`
	SmsTwilioAccountSid                           *string                     `json:"sms_twilio_account_sid,omitempty"`
	SmsTwilioAuthToken                            *string                     `json:"sms_twilio_auth_token,omitempty"`
	SmsTwilioContentSid                           *string                     `json:"sms_twilio_content_sid,omitempty"`
	SmsTwilioMessageServiceSid                    *string                     `json:"sms_twilio_message_service_sid,omitempty"`
	SmsTwilioVerifyAccountSid                     *string                     `json:"sms_twilio_verify_account_sid,omitempty"`
	SmsTwilioVerifyAuthToken                      *string                     `json:"sms_twilio_verify_auth_token,omitempty"`
	SmsTwilioVerifyMessageServiceSid              *string                     `json:"sms_twilio_verify_message_service_sid,omitempty"`
	SmsVonageAPIKey                               *string                     `json:"sms_vonage_api_key,omitempty"`
	SmsVonageAPISecret                            *string                     `json:"sms_vonage_api_secret,omitempty"`
	SmsVonageFrom                                 *string                     `json:"sms_vonage_from,omitempty"`
	SmsTemplate                                   *string                     `json:"sms_template,omitempty"`
	HookMfaVerificationAttemptEnabled             *bool                       `json:"hook_mfa_verification_attempt_enabled,omitempty"`
	HookMfaVerificationAttemptURI                 *string                     `json:"hook_mfa_verification_attempt_uri,omitempty"`
	HookMfaVerificationAttemptSecrets             *string                     `json:"hook_mfa_verification_attempt_secrets,omitempty"`
	HookPasswordVerificationAttemptEnabled        *bool                       `json:"hook_password_verification_attempt_enabled,omitempty"`
	HookPasswordVerificationAttemptURI            *string                     `json:"hook_password_verification_attempt_uri,omitempty"`
	HookPasswordVerificationAttemptSecrets        *string                     `json:"hook_password_verification_attempt_secrets,omitempty"`
	HookCustomAccessTokenEnabled                  *bool                       `json:"hook_custom_access_token_enabled,omitempty"`
	HookCustomAccessTokenURI                      *string                     `json:"hook_custom_access_token_uri,omitempty"`
	HookCustomAccessTokenSecrets                  *string                     `json:"hook_custom_access_token_secrets,omitempty"`
	HookSendSmsEnabled                            *bool                       `json:"hook_send_sms_enabled,omitempty"`
	HookSendSmsURI                                *string                     `json:"hook_send_sms_uri,omitempty"`
	HookSendSmsSecrets                            *string                     `json:"hook_send_sms_secrets,omitempty"`
	HookSendEmailEnabled                          *bool                       `json:"hook_send_email_enabled,omitempty"`
	HookSendEmailURI                              *string                     `json:"hook_send_email_uri,omitempty"`
	HookSendEmailSecrets                          *string                     `json:"hook_send_email_secrets,omitempty"`
	ExternalAppleEnabled                          *bool                       `json:"external_apple_enabled,omitempty"`
	ExternalAppleClientID                         *string                     `json:"external_apple_client_id,omitempty"`
	ExternalAppleSecret                           *string                     `json:"external_apple_secret,omitempty"`
	ExternalAppleAdditionalClientIds              *string                     `json:"external_apple_additional_client_ids,omitempty"`
	ExternalAzureEnabled                          *bool                       `json:"external_azure_enabled,omitempty"`
	ExternalAzureClientID                         *string                     `json:"external_azure_client_id,omitempty"`
	ExternalAzureSecret                           *string                     `json:"external_azure_secret,omitempty"`
	ExternalAzureURL                              *string                     `json:"external_azure_url,omitempty"`
	ExternalBitbucketEnabled                      *bool                       `json:"external_bitbucket_enabled,omitempty"`
	ExternalBitbucketClientID                     *string                     `json:"external_bitbucket_client_id,omitempty"`
	ExternalBitbucketSecret                       *string                     `json:"external_bitbucket_secret,omitempty"`
	ExternalDiscordEnabled                        *bool                       `json:"external_discord_enabled,omitempty"`
	ExternalDiscordClientID                       *string                     `json:"external_discord_client_id,omitempty"`
	ExternalDiscordSecret                         *string                     `json:"external_discord_secret,omitempty"`
	ExternalFacebookEnabled                       *bool                       `json:"external_facebook_enabled,omitempty"`
	ExternalFacebookClientID                      *string                     `json:"external_facebook_client_id,omitempty"`
	ExternalFacebookSecret                        *string                     `json:"external_facebook_secret,omitempty"`
	ExternalFigmaEnabled                          *bool                       `json:"external_figma_enabled,omitempty"`
	ExternalFigmaClientID                         *string                     `json:"external_figma_client_id,omitempty"`
	ExternalFigmaSecret                           *string                     `json:"external_figma_secret,omitempty"`
	ExternalGithubEnabled                         *bool                       `json:"external_github_enabled,omitempty"`
	ExternalGithubClientID                        *string                     `json:"external_github_client_id,omitempty"`
	ExternalGithubSecret                          *string                     `json:"external_github_secret,omitempty"`
	ExternalGitlabEnabled                         *bool                       `json:"external_gitlab_enabled,omitempty"`
	ExternalGitlabClientID                        *string                     `json:"external_gitlab_client_id,omitempty"`
	ExternalGitlabSecret                          *string                     `json:"external_gitlab_secret,omitempty"`
	ExternalGitlabURL                             *string                     `json:"external_gitlab_url,omitempty"`
	ExternalGoogleEnabled                         *bool                       `json:"external_google_enabled,omitempty"`
	ExternalGoogleClientID                        *string                     `json:"external_google_client_id,omitempty"`
	ExternalGoogleSecret                          *string                     `json:"external_google_secret,omitempty"`
	ExternalGoogleAdditionalClientIds             *string                     `json:"external_google_additional_client_ids,omitempty"`
	ExternalGoogleSkipNonceCheck                  *bool                       `json:"external_google_skip_nonce_check,omitempty"`
	ExternalKakaoEnabled                          *bool                       `json:"external_kakao_enabled,omitempty"`
	ExternalKakaoClientID                         *string                     `json:"external_kakao_client_id,omitempty"`
	ExternalKakaoSecret                           *string                     `json:"external_kakao_secret,omitempty"`
	ExternalKeycloakEnabled                       *bool                       `json:"external_keycloak_enabled,omitempty"`
	ExternalKeycloakClientID                      *string                     `json:"external_keycloak_client_id,omitempty"`
	ExternalKeycloakSecret                        *string                     `json:"external_keycloak_secret,omitempty"`
	ExternalKeycloakURL                           *string                     `json:"external_keycloak_url,omitempty"`
	ExternalLinkedinOidcEnabled                   *bool                       `json:"external_linkedin_oidc_enabled,omitempty"`
	ExternalLinkedinOidcClientID                  *string                     `json:"external_linkedin_oidc_client_id,omitempty"`
	ExternalLinkedinOidcSecret                    *string                     `json:"external_linkedin_oidc_secret,omitempty"`
	ExternalSlackOidcEnabled                      *bool                       `json:"external_slack_oidc_enabled,omitempty"`
	ExternalSlackOidcClientID                     *string                     `json:"external_slack_oidc_client_id,omitempty"`
	ExternalSlackOidcSecret                       *string                     `json:"external_slack_oidc_secret,omitempty"`
	ExternalNotionEnabled                         *bool                       `json:"external_notion_enabled,omitempty"`
	ExternalNotionClientID                        *string                     `json:"external_notion_client_id,omitempty"`
	ExternalNotionSecret                          *string                     `json:"external_notion_secret,omitempty"`
	ExternalSlackEnabled                          *bool                       `json:"external_slack_enabled,omitempty"`
	ExternalSlackClientID                         *string                     `json:"external_slack_client_id,omitempty"`
	ExternalSlackSecret                           *string                     `json:"external_slack_secret,omitempty"`
	ExternalSpotifyEnabled                        *bool                       `json:"external_spotify_enabled,omitempty"`
	ExternalSpotifyClientID                       *string                     `json:"external_spotify_client_id,omitempty"`
	ExternalSpotifySecret                         *string                     `json:"external_spotify_secret,omitempty"`
	ExternalTwitchEnabled                         *bool                       `json:"external_twitch_enabled,omitempty"`
	ExternalTwitchClientID                        *string                     `json:"external_twitch_client_id,omitempty"`
	ExternalTwitchSecret                          *string                     `json:"external_twitch_secret,omitempty"`
	ExternalTwitterEnabled                        *bool                       `json:"external_twitter_enabled,omitempty"`
	ExternalTwitterClientID                       *string                     `json:"external_twitter_client_id,omitempty"`
	ExternalTwitterSecret                         *string                     `json:"external_twitter_secret,omitempty"`
	ExternalWorkosEnabled                         *bool                       `json:"external_workos_enabled,omitempty"`
	ExternalWorkosClientID                        *string                     `json:"external_workos_client_id,omitempty"`
	ExternalWorkosSecret                          *string                     `json:"external_workos_secret,omitempty"`
	ExternalWorkosURL                             *string                     `json:"external_workos_url,omitempty"`
	ExternalZoomEnabled                           *bool                       `json:"external_zoom_enabled,omitempty"`
	ExternalZoomClientID                          *string                     `json:"external_zoom_client_id,omitempty"`
	ExternalZoomSecret                            *string                     `json:"external_zoom_secret,omitempty"`
	MfaTotpEnrollEnabled                          *bool                       `json:"mfa_totp_enroll_enabled,omitempty"`
	MfaTotpVerifyEnabled                          *bool                       `json:"mfa_totp_verify_enabled,omitempty"`
	MfaWebAuthnEnrollEnabled                      *bool                       `json:"mfa_web_authn_enroll_enabled,omitempty"`
	MfaWebAuthnVerifyEnabled                      *bool                       `json:"mfa_web_authn_verify_enabled,omitempty"`
	MfaPhoneEnrollEnabled                         *bool                       `json:"mfa_phone_enroll_enabled,omitempty"`
	MfaPhoneVerifyEnabled                         *bool                       `json:"mfa_phone_verify_enabled,omitempty"`
	MfaPhoneTemplate                              *string                     `json:"mfa_phone_template,omitempty"`
}

func (o *UpdateAuthConfigBody) GetJwtExp() *int64 {
	if o == nil {
		return nil
	}
	return o.JwtExp
}

func (o *UpdateAuthConfigBody) GetSMTPMaxFrequency() *int64 {
	if o == nil {
		return nil
	}
	return o.SMTPMaxFrequency
}

func (o *UpdateAuthConfigBody) GetMfaMaxEnrolledFactors() *int64 {
	if o == nil {
		return nil
	}
	return o.MfaMaxEnrolledFactors
}

func (o *UpdateAuthConfigBody) GetSessionsTimebox() *int64 {
	if o == nil {
		return nil
	}
	return o.SessionsTimebox
}

func (o *UpdateAuthConfigBody) GetSessionsInactivityTimeout() *int64 {
	if o == nil {
		return nil
	}
	return o.SessionsInactivityTimeout
}

func (o *UpdateAuthConfigBody) GetRateLimitAnonymousUsers() *int64 {
	if o == nil {
		return nil
	}
	return o.RateLimitAnonymousUsers
}

func (o *UpdateAuthConfigBody) GetRateLimitEmailSent() *int64 {
	if o == nil {
		return nil
	}
	return o.RateLimitEmailSent
}

func (o *UpdateAuthConfigBody) GetRateLimitSmsSent() *int64 {
	if o == nil {
		return nil
	}
	return o.RateLimitSmsSent
}

func (o *UpdateAuthConfigBody) GetRateLimitVerify() *int64 {
	if o == nil {
		return nil
	}
	return o.RateLimitVerify
}

func (o *UpdateAuthConfigBody) GetRateLimitTokenRefresh() *int64 {
	if o == nil {
		return nil
	}
	return o.RateLimitTokenRefresh
}

func (o *UpdateAuthConfigBody) GetRateLimitOtp() *int64 {
	if o == nil {
		return nil
	}
	return o.RateLimitOtp
}

func (o *UpdateAuthConfigBody) GetPasswordMinLength() *int64 {
	if o == nil {
		return nil
	}
	return o.PasswordMinLength
}

func (o *UpdateAuthConfigBody) GetSecurityRefreshTokenReuseInterval() *int64 {
	if o == nil {
		return nil
	}
	return o.SecurityRefreshTokenReuseInterval
}

func (o *UpdateAuthConfigBody) GetMailerOtpExp() *int64 {
	if o == nil {
		return nil
	}
	return o.MailerOtpExp
}

func (o *UpdateAuthConfigBody) GetMailerOtpLength() *int64 {
	if o == nil {
		return nil
	}
	return o.MailerOtpLength
}

func (o *UpdateAuthConfigBody) GetSmsMaxFrequency() *int64 {
	if o == nil {
		return nil
	}
	return o.SmsMaxFrequency
}

func (o *UpdateAuthConfigBody) GetSmsOtpExp() *int64 {
	if o == nil {
		return nil
	}
	return o.SmsOtpExp
}

func (o *UpdateAuthConfigBody) GetSmsOtpLength() *int64 {
	if o == nil {
		return nil
	}
	return o.SmsOtpLength
}

func (o *UpdateAuthConfigBody) GetDbMaxPoolSize() *int64 {
	if o == nil {
		return nil
	}
	return o.DbMaxPoolSize
}

func (o *UpdateAuthConfigBody) GetAPIMaxRequestDuration() *int64 {
	if o == nil {
		return nil
	}
	return o.APIMaxRequestDuration
}

func (o *UpdateAuthConfigBody) GetMfaPhoneMaxFrequency() *int64 {
	if o == nil {
		return nil
	}
	return o.MfaPhoneMaxFrequency
}

func (o *UpdateAuthConfigBody) GetMfaPhoneOtpLength() *int64 {
	if o == nil {
		return nil
	}
	return o.MfaPhoneOtpLength
}

func (o *UpdateAuthConfigBody) GetSiteURL() *string {
	if o == nil {
		return nil
	}
	return o.SiteURL
}

func (o *UpdateAuthConfigBody) GetDisableSignup() *bool {
	if o == nil {
		return nil
	}
	return o.DisableSignup
}

func (o *UpdateAuthConfigBody) GetSMTPAdminEmail() *string {
	if o == nil {
		return nil
	}
	return o.SMTPAdminEmail
}

func (o *UpdateAuthConfigBody) GetSMTPHost() *string {
	if o == nil {
		return nil
	}
	return o.SMTPHost
}

func (o *UpdateAuthConfigBody) GetSMTPPort() *string {
	if o == nil {
		return nil
	}
	return o.SMTPPort
}

func (o *UpdateAuthConfigBody) GetSMTPUser() *string {
	if o == nil {
		return nil
	}
	return o.SMTPUser
}

func (o *UpdateAuthConfigBody) GetSMTPPass() *string {
	if o == nil {
		return nil
	}
	return o.SMTPPass
}

func (o *UpdateAuthConfigBody) GetSMTPSenderName() *string {
	if o == nil {
		return nil
	}
	return o.SMTPSenderName
}

func (o *UpdateAuthConfigBody) GetMailerAllowUnverifiedEmailSignIns() *bool {
	if o == nil {
		return nil
	}
	return o.MailerAllowUnverifiedEmailSignIns
}

func (o *UpdateAuthConfigBody) GetMailerAutoconfirm() *bool {
	if o == nil {
		return nil
	}
	return o.MailerAutoconfirm
}

func (o *UpdateAuthConfigBody) GetMailerSubjectsInvite() *string {
	if o == nil {
		return nil
	}
	return o.MailerSubjectsInvite
}

func (o *UpdateAuthConfigBody) GetMailerSubjectsConfirmation() *string {
	if o == nil {
		return nil
	}
	return o.MailerSubjectsConfirmation
}

func (o *UpdateAuthConfigBody) GetMailerSubjectsRecovery() *string {
	if o == nil {
		return nil
	}
	return o.MailerSubjectsRecovery
}

func (o *UpdateAuthConfigBody) GetMailerSubjectsEmailChange() *string {
	if o == nil {
		return nil
	}
	return o.MailerSubjectsEmailChange
}

func (o *UpdateAuthConfigBody) GetMailerSubjectsMagicLink() *string {
	if o == nil {
		return nil
	}
	return o.MailerSubjectsMagicLink
}

func (o *UpdateAuthConfigBody) GetMailerSubjectsReauthentication() *string {
	if o == nil {
		return nil
	}
	return o.MailerSubjectsReauthentication
}

func (o *UpdateAuthConfigBody) GetMailerTemplatesInviteContent() *string {
	if o == nil {
		return nil
	}
	return o.MailerTemplatesInviteContent
}

func (o *UpdateAuthConfigBody) GetMailerTemplatesConfirmationContent() *string {
	if o == nil {
		return nil
	}
	return o.MailerTemplatesConfirmationContent
}

func (o *UpdateAuthConfigBody) GetMailerTemplatesRecoveryContent() *string {
	if o == nil {
		return nil
	}
	return o.MailerTemplatesRecoveryContent
}

func (o *UpdateAuthConfigBody) GetMailerTemplatesEmailChangeContent() *string {
	if o == nil {
		return nil
	}
	return o.MailerTemplatesEmailChangeContent
}

func (o *UpdateAuthConfigBody) GetMailerTemplatesMagicLinkContent() *string {
	if o == nil {
		return nil
	}
	return o.MailerTemplatesMagicLinkContent
}

func (o *UpdateAuthConfigBody) GetMailerTemplatesReauthenticationContent() *string {
	if o == nil {
		return nil
	}
	return o.MailerTemplatesReauthenticationContent
}

func (o *UpdateAuthConfigBody) GetURIAllowList() *string {
	if o == nil {
		return nil
	}
	return o.URIAllowList
}

func (o *UpdateAuthConfigBody) GetExternalAnonymousUsersEnabled() *bool {
	if o == nil {
		return nil
	}
	return o.ExternalAnonymousUsersEnabled
}

func (o *UpdateAuthConfigBody) GetExternalEmailEnabled() *bool {
	if o == nil {
		return nil
	}
	return o.ExternalEmailEnabled
}

func (o *UpdateAuthConfigBody) GetExternalPhoneEnabled() *bool {
	if o == nil {
		return nil
	}
	return o.ExternalPhoneEnabled
}

func (o *UpdateAuthConfigBody) GetSamlEnabled() *bool {
	if o == nil {
		return nil
	}
	return o.SamlEnabled
}

func (o *UpdateAuthConfigBody) GetSamlExternalURL() *string {
	if o == nil {
		return nil
	}
	return o.SamlExternalURL
}

func (o *UpdateAuthConfigBody) GetSecurityCaptchaEnabled() *bool {
	if o == nil {
		return nil
	}
	return o.SecurityCaptchaEnabled
}

func (o *UpdateAuthConfigBody) GetSecurityCaptchaProvider() *string {
	if o == nil {
		return nil
	}
	return o.SecurityCaptchaProvider
}

func (o *UpdateAuthConfigBody) GetSecurityCaptchaSecret() *string {
	if o == nil {
		return nil
	}
	return o.SecurityCaptchaSecret
}

func (o *UpdateAuthConfigBody) GetSessionsSinglePerUser() *bool {
	if o == nil {
		return nil
	}
	return o.SessionsSinglePerUser
}

func (o *UpdateAuthConfigBody) GetSessionsTags() *string {
	if o == nil {
		return nil
	}
	return o.SessionsTags
}

func (o *UpdateAuthConfigBody) GetMailerSecureEmailChangeEnabled() *bool {
	if o == nil {
		return nil
	}
	return o.MailerSecureEmailChangeEnabled
}

func (o *UpdateAuthConfigBody) GetRefreshTokenRotationEnabled() *bool {
	if o == nil {
		return nil
	}
	return o.RefreshTokenRotationEnabled
}

func (o *UpdateAuthConfigBody) GetPasswordHibpEnabled() *bool {
	if o == nil {
		return nil
	}
	return o.PasswordHibpEnabled
}

func (o *UpdateAuthConfigBody) GetPasswordRequiredCharacters() *PasswordRequiredCharacters {
	if o == nil {
		return nil
	}
	return o.PasswordRequiredCharacters
}

func (o *UpdateAuthConfigBody) GetSecurityManualLinkingEnabled() *bool {
	if o == nil {
		return nil
	}
	return o.SecurityManualLinkingEnabled
}

func (o *UpdateAuthConfigBody) GetSecurityUpdatePasswordRequireReauthentication() *bool {
	if o == nil {
		return nil
	}
	return o.SecurityUpdatePasswordRequireReauthentication
}

func (o *UpdateAuthConfigBody) GetSmsAutoconfirm() *bool {
	if o == nil {
		return nil
	}
	return o.SmsAutoconfirm
}

func (o *UpdateAuthConfigBody) GetSmsProvider() *string {
	if o == nil {
		return nil
	}
	return o.SmsProvider
}

func (o *UpdateAuthConfigBody) GetSmsMessagebirdAccessKey() *string {
	if o == nil {
		return nil
	}
	return o.SmsMessagebirdAccessKey
}

func (o *UpdateAuthConfigBody) GetSmsMessagebirdOriginator() *string {
	if o == nil {
		return nil
	}
	return o.SmsMessagebirdOriginator
}

func (o *UpdateAuthConfigBody) GetSmsTestOtp() *string {
	if o == nil {
		return nil
	}
	return o.SmsTestOtp
}

func (o *UpdateAuthConfigBody) GetSmsTestOtpValidUntil() *string {
	if o == nil {
		return nil
	}
	return o.SmsTestOtpValidUntil
}

func (o *UpdateAuthConfigBody) GetSmsTextlocalAPIKey() *string {
	if o == nil {
		return nil
	}
	return o.SmsTextlocalAPIKey
}

func (o *UpdateAuthConfigBody) GetSmsTextlocalSender() *string {
	if o == nil {
		return nil
	}
	return o.SmsTextlocalSender
}

func (o *UpdateAuthConfigBody) GetSmsTwilioAccountSid() *string {
	if o == nil {
		return nil
	}
	return o.SmsTwilioAccountSid
}

func (o *UpdateAuthConfigBody) GetSmsTwilioAuthToken() *string {
	if o == nil {
		return nil
	}
	return o.SmsTwilioAuthToken
}

func (o *UpdateAuthConfigBody) GetSmsTwilioContentSid() *string {
	if o == nil {
		return nil
	}
	return o.SmsTwilioContentSid
}

func (o *UpdateAuthConfigBody) GetSmsTwilioMessageServiceSid() *string {
	if o == nil {
		return nil
	}
	return o.SmsTwilioMessageServiceSid
}

func (o *UpdateAuthConfigBody) GetSmsTwilioVerifyAccountSid() *string {
	if o == nil {
		return nil
	}
	return o.SmsTwilioVerifyAccountSid
}

func (o *UpdateAuthConfigBody) GetSmsTwilioVerifyAuthToken() *string {
	if o == nil {
		return nil
	}
	return o.SmsTwilioVerifyAuthToken
}

func (o *UpdateAuthConfigBody) GetSmsTwilioVerifyMessageServiceSid() *string {
	if o == nil {
		return nil
	}
	return o.SmsTwilioVerifyMessageServiceSid
}

func (o *UpdateAuthConfigBody) GetSmsVonageAPIKey() *string {
	if o == nil {
		return nil
	}
	return o.SmsVonageAPIKey
}

func (o *UpdateAuthConfigBody) GetSmsVonageAPISecret() *string {
	if o == nil {
		return nil
	}
	return o.SmsVonageAPISecret
}

func (o *UpdateAuthConfigBody) GetSmsVonageFrom() *string {
	if o == nil {
		return nil
	}
	return o.SmsVonageFrom
}

func (o *UpdateAuthConfigBody) GetSmsTemplate() *string {
	if o == nil {
		return nil
	}
	return o.SmsTemplate
}

func (o *UpdateAuthConfigBody) GetHookMfaVerificationAttemptEnabled() *bool {
	if o == nil {
		return nil
	}
	return o.HookMfaVerificationAttemptEnabled
}

func (o *UpdateAuthConfigBody) GetHookMfaVerificationAttemptURI() *string {
	if o == nil {
		return nil
	}
	return o.HookMfaVerificationAttemptURI
}

func (o *UpdateAuthConfigBody) GetHookMfaVerificationAttemptSecrets() *string {
	if o == nil {
		return nil
	}
	return o.HookMfaVerificationAttemptSecrets
}

func (o *UpdateAuthConfigBody) GetHookPasswordVerificationAttemptEnabled() *bool {
	if o == nil {
		return nil
	}
	return o.HookPasswordVerificationAttemptEnabled
}

func (o *UpdateAuthConfigBody) GetHookPasswordVerificationAttemptURI() *string {
	if o == nil {
		return nil
	}
	return o.HookPasswordVerificationAttemptURI
}

func (o *UpdateAuthConfigBody) GetHookPasswordVerificationAttemptSecrets() *string {
	if o == nil {
		return nil
	}
	return o.HookPasswordVerificationAttemptSecrets
}

func (o *UpdateAuthConfigBody) GetHookCustomAccessTokenEnabled() *bool {
	if o == nil {
		return nil
	}
	return o.HookCustomAccessTokenEnabled
}

func (o *UpdateAuthConfigBody) GetHookCustomAccessTokenURI() *string {
	if o == nil {
		return nil
	}
	return o.HookCustomAccessTokenURI
}

func (o *UpdateAuthConfigBody) GetHookCustomAccessTokenSecrets() *string {
	if o == nil {
		return nil
	}
	return o.HookCustomAccessTokenSecrets
}

func (o *UpdateAuthConfigBody) GetHookSendSmsEnabled() *bool {
	if o == nil {
		return nil
	}
	return o.HookSendSmsEnabled
}

func (o *UpdateAuthConfigBody) GetHookSendSmsURI() *string {
	if o == nil {
		return nil
	}
	return o.HookSendSmsURI
}

func (o *UpdateAuthConfigBody) GetHookSendSmsSecrets() *string {
	if o == nil {
		return nil
	}
	return o.HookSendSmsSecrets
}

func (o *UpdateAuthConfigBody) GetHookSendEmailEnabled() *bool {
	if o == nil {
		return nil
	}
	return o.HookSendEmailEnabled
}

func (o *UpdateAuthConfigBody) GetHookSendEmailURI() *string {
	if o == nil {
		return nil
	}
	return o.HookSendEmailURI
}

func (o *UpdateAuthConfigBody) GetHookSendEmailSecrets() *string {
	if o == nil {
		return nil
	}
	return o.HookSendEmailSecrets
}

func (o *UpdateAuthConfigBody) GetExternalAppleEnabled() *bool {
	if o == nil {
		return nil
	}
	return o.ExternalAppleEnabled
}

func (o *UpdateAuthConfigBody) GetExternalAppleClientID() *string {
	if o == nil {
		return nil
	}
	return o.ExternalAppleClientID
}

func (o *UpdateAuthConfigBody) GetExternalAppleSecret() *string {
	if o == nil {
		return nil
	}
	return o.ExternalAppleSecret
}

func (o *UpdateAuthConfigBody) GetExternalAppleAdditionalClientIds() *string {
	if o == nil {
		return nil
	}
	return o.ExternalAppleAdditionalClientIds
}

func (o *UpdateAuthConfigBody) GetExternalAzureEnabled() *bool {
	if o == nil {
		return nil
	}
	return o.ExternalAzureEnabled
}

func (o *UpdateAuthConfigBody) GetExternalAzureClientID() *string {
	if o == nil {
		return nil
	}
	return o.ExternalAzureClientID
}

func (o *UpdateAuthConfigBody) GetExternalAzureSecret() *string {
	if o == nil {
		return nil
	}
	return o.ExternalAzureSecret
}

func (o *UpdateAuthConfigBody) GetExternalAzureURL() *string {
	if o == nil {
		return nil
	}
	return o.ExternalAzureURL
}

func (o *UpdateAuthConfigBody) GetExternalBitbucketEnabled() *bool {
	if o == nil {
		return nil
	}
	return o.ExternalBitbucketEnabled
}

func (o *UpdateAuthConfigBody) GetExternalBitbucketClientID() *string {
	if o == nil {
		return nil
	}
	return o.ExternalBitbucketClientID
}

func (o *UpdateAuthConfigBody) GetExternalBitbucketSecret() *string {
	if o == nil {
		return nil
	}
	return o.ExternalBitbucketSecret
}

func (o *UpdateAuthConfigBody) GetExternalDiscordEnabled() *bool {
	if o == nil {
		return nil
	}
	return o.ExternalDiscordEnabled
}

func (o *UpdateAuthConfigBody) GetExternalDiscordClientID() *string {
	if o == nil {
		return nil
	}
	return o.ExternalDiscordClientID
}

func (o *UpdateAuthConfigBody) GetExternalDiscordSecret() *string {
	if o == nil {
		return nil
	}
	return o.ExternalDiscordSecret
}

func (o *UpdateAuthConfigBody) GetExternalFacebookEnabled() *bool {
	if o == nil {
		return nil
	}
	return o.ExternalFacebookEnabled
}

func (o *UpdateAuthConfigBody) GetExternalFacebookClientID() *string {
	if o == nil {
		return nil
	}
	return o.ExternalFacebookClientID
}

func (o *UpdateAuthConfigBody) GetExternalFacebookSecret() *string {
	if o == nil {
		return nil
	}
	return o.ExternalFacebookSecret
}

func (o *UpdateAuthConfigBody) GetExternalFigmaEnabled() *bool {
	if o == nil {
		return nil
	}
	return o.ExternalFigmaEnabled
}

func (o *UpdateAuthConfigBody) GetExternalFigmaClientID() *string {
	if o == nil {
		return nil
	}
	return o.ExternalFigmaClientID
}

func (o *UpdateAuthConfigBody) GetExternalFigmaSecret() *string {
	if o == nil {
		return nil
	}
	return o.ExternalFigmaSecret
}

func (o *UpdateAuthConfigBody) GetExternalGithubEnabled() *bool {
	if o == nil {
		return nil
	}
	return o.ExternalGithubEnabled
}

func (o *UpdateAuthConfigBody) GetExternalGithubClientID() *string {
	if o == nil {
		return nil
	}
	return o.ExternalGithubClientID
}

func (o *UpdateAuthConfigBody) GetExternalGithubSecret() *string {
	if o == nil {
		return nil
	}
	return o.ExternalGithubSecret
}

func (o *UpdateAuthConfigBody) GetExternalGitlabEnabled() *bool {
	if o == nil {
		return nil
	}
	return o.ExternalGitlabEnabled
}

func (o *UpdateAuthConfigBody) GetExternalGitlabClientID() *string {
	if o == nil {
		return nil
	}
	return o.ExternalGitlabClientID
}

func (o *UpdateAuthConfigBody) GetExternalGitlabSecret() *string {
	if o == nil {
		return nil
	}
	return o.ExternalGitlabSecret
}

func (o *UpdateAuthConfigBody) GetExternalGitlabURL() *string {
	if o == nil {
		return nil
	}
	return o.ExternalGitlabURL
}

func (o *UpdateAuthConfigBody) GetExternalGoogleEnabled() *bool {
	if o == nil {
		return nil
	}
	return o.ExternalGoogleEnabled
}

func (o *UpdateAuthConfigBody) GetExternalGoogleClientID() *string {
	if o == nil {
		return nil
	}
	return o.ExternalGoogleClientID
}

func (o *UpdateAuthConfigBody) GetExternalGoogleSecret() *string {
	if o == nil {
		return nil
	}
	return o.ExternalGoogleSecret
}

func (o *UpdateAuthConfigBody) GetExternalGoogleAdditionalClientIds() *string {
	if o == nil {
		return nil
	}
	return o.ExternalGoogleAdditionalClientIds
}

func (o *UpdateAuthConfigBody) GetExternalGoogleSkipNonceCheck() *bool {
	if o == nil {
		return nil
	}
	return o.ExternalGoogleSkipNonceCheck
}

func (o *UpdateAuthConfigBody) GetExternalKakaoEnabled() *bool {
	if o == nil {
		return nil
	}
	return o.ExternalKakaoEnabled
}

func (o *UpdateAuthConfigBody) GetExternalKakaoClientID() *string {
	if o == nil {
		return nil
	}
	return o.ExternalKakaoClientID
}

func (o *UpdateAuthConfigBody) GetExternalKakaoSecret() *string {
	if o == nil {
		return nil
	}
	return o.ExternalKakaoSecret
}

func (o *UpdateAuthConfigBody) GetExternalKeycloakEnabled() *bool {
	if o == nil {
		return nil
	}
	return o.ExternalKeycloakEnabled
}

func (o *UpdateAuthConfigBody) GetExternalKeycloakClientID() *string {
	if o == nil {
		return nil
	}
	return o.ExternalKeycloakClientID
}

func (o *UpdateAuthConfigBody) GetExternalKeycloakSecret() *string {
	if o == nil {
		return nil
	}
	return o.ExternalKeycloakSecret
}

func (o *UpdateAuthConfigBody) GetExternalKeycloakURL() *string {
	if o == nil {
		return nil
	}
	return o.ExternalKeycloakURL
}

func (o *UpdateAuthConfigBody) GetExternalLinkedinOidcEnabled() *bool {
	if o == nil {
		return nil
	}
	return o.ExternalLinkedinOidcEnabled
}

func (o *UpdateAuthConfigBody) GetExternalLinkedinOidcClientID() *string {
	if o == nil {
		return nil
	}
	return o.ExternalLinkedinOidcClientID
}

func (o *UpdateAuthConfigBody) GetExternalLinkedinOidcSecret() *string {
	if o == nil {
		return nil
	}
	return o.ExternalLinkedinOidcSecret
}

func (o *UpdateAuthConfigBody) GetExternalSlackOidcEnabled() *bool {
	if o == nil {
		return nil
	}
	return o.ExternalSlackOidcEnabled
}

func (o *UpdateAuthConfigBody) GetExternalSlackOidcClientID() *string {
	if o == nil {
		return nil
	}
	return o.ExternalSlackOidcClientID
}

func (o *UpdateAuthConfigBody) GetExternalSlackOidcSecret() *string {
	if o == nil {
		return nil
	}
	return o.ExternalSlackOidcSecret
}

func (o *UpdateAuthConfigBody) GetExternalNotionEnabled() *bool {
	if o == nil {
		return nil
	}
	return o.ExternalNotionEnabled
}

func (o *UpdateAuthConfigBody) GetExternalNotionClientID() *string {
	if o == nil {
		return nil
	}
	return o.ExternalNotionClientID
}

func (o *UpdateAuthConfigBody) GetExternalNotionSecret() *string {
	if o == nil {
		return nil
	}
	return o.ExternalNotionSecret
}

func (o *UpdateAuthConfigBody) GetExternalSlackEnabled() *bool {
	if o == nil {
		return nil
	}
	return o.ExternalSlackEnabled
}

func (o *UpdateAuthConfigBody) GetExternalSlackClientID() *string {
	if o == nil {
		return nil
	}
	return o.ExternalSlackClientID
}

func (o *UpdateAuthConfigBody) GetExternalSlackSecret() *string {
	if o == nil {
		return nil
	}
	return o.ExternalSlackSecret
}

func (o *UpdateAuthConfigBody) GetExternalSpotifyEnabled() *bool {
	if o == nil {
		return nil
	}
	return o.ExternalSpotifyEnabled
}

func (o *UpdateAuthConfigBody) GetExternalSpotifyClientID() *string {
	if o == nil {
		return nil
	}
	return o.ExternalSpotifyClientID
}

func (o *UpdateAuthConfigBody) GetExternalSpotifySecret() *string {
	if o == nil {
		return nil
	}
	return o.ExternalSpotifySecret
}

func (o *UpdateAuthConfigBody) GetExternalTwitchEnabled() *bool {
	if o == nil {
		return nil
	}
	return o.ExternalTwitchEnabled
}

func (o *UpdateAuthConfigBody) GetExternalTwitchClientID() *string {
	if o == nil {
		return nil
	}
	return o.ExternalTwitchClientID
}

func (o *UpdateAuthConfigBody) GetExternalTwitchSecret() *string {
	if o == nil {
		return nil
	}
	return o.ExternalTwitchSecret
}

func (o *UpdateAuthConfigBody) GetExternalTwitterEnabled() *bool {
	if o == nil {
		return nil
	}
	return o.ExternalTwitterEnabled
}

func (o *UpdateAuthConfigBody) GetExternalTwitterClientID() *string {
	if o == nil {
		return nil
	}
	return o.ExternalTwitterClientID
}

func (o *UpdateAuthConfigBody) GetExternalTwitterSecret() *string {
	if o == nil {
		return nil
	}
	return o.ExternalTwitterSecret
}

func (o *UpdateAuthConfigBody) GetExternalWorkosEnabled() *bool {
	if o == nil {
		return nil
	}
	return o.ExternalWorkosEnabled
}

func (o *UpdateAuthConfigBody) GetExternalWorkosClientID() *string {
	if o == nil {
		return nil
	}
	return o.ExternalWorkosClientID
}

func (o *UpdateAuthConfigBody) GetExternalWorkosSecret() *string {
	if o == nil {
		return nil
	}
	return o.ExternalWorkosSecret
}

func (o *UpdateAuthConfigBody) GetExternalWorkosURL() *string {
	if o == nil {
		return nil
	}
	return o.ExternalWorkosURL
}

func (o *UpdateAuthConfigBody) GetExternalZoomEnabled() *bool {
	if o == nil {
		return nil
	}
	return o.ExternalZoomEnabled
}

func (o *UpdateAuthConfigBody) GetExternalZoomClientID() *string {
	if o == nil {
		return nil
	}
	return o.ExternalZoomClientID
}

func (o *UpdateAuthConfigBody) GetExternalZoomSecret() *string {
	if o == nil {
		return nil
	}
	return o.ExternalZoomSecret
}

func (o *UpdateAuthConfigBody) GetMfaTotpEnrollEnabled() *bool {
	if o == nil {
		return nil
	}
	return o.MfaTotpEnrollEnabled
}

func (o *UpdateAuthConfigBody) GetMfaTotpVerifyEnabled() *bool {
	if o == nil {
		return nil
	}
	return o.MfaTotpVerifyEnabled
}

func (o *UpdateAuthConfigBody) GetMfaWebAuthnEnrollEnabled() *bool {
	if o == nil {
		return nil
	}
	return o.MfaWebAuthnEnrollEnabled
}

func (o *UpdateAuthConfigBody) GetMfaWebAuthnVerifyEnabled() *bool {
	if o == nil {
		return nil
	}
	return o.MfaWebAuthnVerifyEnabled
}

func (o *UpdateAuthConfigBody) GetMfaPhoneEnrollEnabled() *bool {
	if o == nil {
		return nil
	}
	return o.MfaPhoneEnrollEnabled
}

func (o *UpdateAuthConfigBody) GetMfaPhoneVerifyEnabled() *bool {
	if o == nil {
		return nil
	}
	return o.MfaPhoneVerifyEnabled
}

func (o *UpdateAuthConfigBody) GetMfaPhoneTemplate() *string {
	if o == nil {
		return nil
	}
	return o.MfaPhoneTemplate
}
