// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type PoolMode string

const (
	PoolModeTransaction PoolMode = "transaction"
	PoolModeSession     PoolMode = "session"
	PoolModeStatement   PoolMode = "statement"
)

func (e PoolMode) ToPointer() *PoolMode {
	return &e
}
func (e *PoolMode) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "transaction":
		fallthrough
	case "session":
		fallthrough
	case "statement":
		*e = PoolMode(v)
		return nil
	default:
		return fmt.Errorf("invalid value for PoolMode: %v", v)
	}
}

type V1PgbouncerConfigResponse struct {
	PoolMode                *PoolMode `json:"pool_mode,omitempty"`
	DefaultPoolSize         *float64  `json:"default_pool_size,omitempty"`
	IgnoreStartupParameters *string   `json:"ignore_startup_parameters,omitempty"`
	MaxClientConn           *float64  `json:"max_client_conn,omitempty"`
	ConnectionString        *string   `json:"connection_string,omitempty"`
}

func (o *V1PgbouncerConfigResponse) GetPoolMode() *PoolMode {
	if o == nil {
		return nil
	}
	return o.PoolMode
}

func (o *V1PgbouncerConfigResponse) GetDefaultPoolSize() *float64 {
	if o == nil {
		return nil
	}
	return o.DefaultPoolSize
}

func (o *V1PgbouncerConfigResponse) GetIgnoreStartupParameters() *string {
	if o == nil {
		return nil
	}
	return o.IgnoreStartupParameters
}

func (o *V1PgbouncerConfigResponse) GetMaxClientConn() *float64 {
	if o == nil {
		return nil
	}
	return o.MaxClientConn
}

func (o *V1PgbouncerConfigResponse) GetConnectionString() *string {
	if o == nil {
		return nil
	}
	return o.ConnectionString
}
