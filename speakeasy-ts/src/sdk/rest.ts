/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { restGetConfig } from "../funcs/restGetConfig.js";
import { restUpdatePostgrestConfig } from "../funcs/restUpdatePostgrestConfig.js";
import { ClientSDK, RequestOptions } from "../lib/sdks.js";
import * as components from "../models/components/index.js";
import * as operations from "../models/operations/index.js";
import { unwrapAsync } from "../types/fp.js";

export class Rest extends ClientSDK {
  /**
   * Gets project's postgrest config
   */
  async getConfig(
    request: operations.V1GetPostgrestServiceConfigRequest,
    options?: RequestOptions,
  ): Promise<components.PostgrestConfigWithJWTSecretResponse> {
    return unwrapAsync(restGetConfig(
      this,
      request,
      options,
    ));
  }

  /**
   * Updates project's postgrest config
   */
  async updatePostgrestConfig(
    request: operations.V1UpdatePostgrestServiceConfigRequest,
    options?: RequestOptions,
  ): Promise<components.V1PostgrestConfigResponse> {
    return unwrapAsync(restUpdatePostgrestConfig(
      this,
      request,
      options,
    ));
  }
}
