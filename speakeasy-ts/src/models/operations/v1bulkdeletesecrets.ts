/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type V1BulkDeleteSecretsRequest = {
  /**
   * Project ref
   */
  ref: string;
  requestBody: Array<string>;
};

export type V1BulkDeleteSecretsResponseBody = {};

/** @internal */
export const V1BulkDeleteSecretsRequest$inboundSchema: z.ZodType<
  V1BulkDeleteSecretsRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  ref: z.string(),
  RequestBody: z.array(z.string()),
}).transform((v) => {
  return remap$(v, {
    "RequestBody": "requestBody",
  });
});

/** @internal */
export type V1BulkDeleteSecretsRequest$Outbound = {
  ref: string;
  RequestBody: Array<string>;
};

/** @internal */
export const V1BulkDeleteSecretsRequest$outboundSchema: z.ZodType<
  V1BulkDeleteSecretsRequest$Outbound,
  z.ZodTypeDef,
  V1BulkDeleteSecretsRequest
> = z.object({
  ref: z.string(),
  requestBody: z.array(z.string()),
}).transform((v) => {
  return remap$(v, {
    requestBody: "RequestBody",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace V1BulkDeleteSecretsRequest$ {
  /** @deprecated use `V1BulkDeleteSecretsRequest$inboundSchema` instead. */
  export const inboundSchema = V1BulkDeleteSecretsRequest$inboundSchema;
  /** @deprecated use `V1BulkDeleteSecretsRequest$outboundSchema` instead. */
  export const outboundSchema = V1BulkDeleteSecretsRequest$outboundSchema;
  /** @deprecated use `V1BulkDeleteSecretsRequest$Outbound` instead. */
  export type Outbound = V1BulkDeleteSecretsRequest$Outbound;
}

export function v1BulkDeleteSecretsRequestToJSON(
  v1BulkDeleteSecretsRequest: V1BulkDeleteSecretsRequest,
): string {
  return JSON.stringify(
    V1BulkDeleteSecretsRequest$outboundSchema.parse(v1BulkDeleteSecretsRequest),
  );
}

export function v1BulkDeleteSecretsRequestFromJSON(
  jsonString: string,
): SafeParseResult<V1BulkDeleteSecretsRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => V1BulkDeleteSecretsRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'V1BulkDeleteSecretsRequest' from JSON`,
  );
}

/** @internal */
export const V1BulkDeleteSecretsResponseBody$inboundSchema: z.ZodType<
  V1BulkDeleteSecretsResponseBody,
  z.ZodTypeDef,
  unknown
> = z.object({});

/** @internal */
export type V1BulkDeleteSecretsResponseBody$Outbound = {};

/** @internal */
export const V1BulkDeleteSecretsResponseBody$outboundSchema: z.ZodType<
  V1BulkDeleteSecretsResponseBody$Outbound,
  z.ZodTypeDef,
  V1BulkDeleteSecretsResponseBody
> = z.object({});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace V1BulkDeleteSecretsResponseBody$ {
  /** @deprecated use `V1BulkDeleteSecretsResponseBody$inboundSchema` instead. */
  export const inboundSchema = V1BulkDeleteSecretsResponseBody$inboundSchema;
  /** @deprecated use `V1BulkDeleteSecretsResponseBody$outboundSchema` instead. */
  export const outboundSchema = V1BulkDeleteSecretsResponseBody$outboundSchema;
  /** @deprecated use `V1BulkDeleteSecretsResponseBody$Outbound` instead. */
  export type Outbound = V1BulkDeleteSecretsResponseBody$Outbound;
}

export function v1BulkDeleteSecretsResponseBodyToJSON(
  v1BulkDeleteSecretsResponseBody: V1BulkDeleteSecretsResponseBody,
): string {
  return JSON.stringify(
    V1BulkDeleteSecretsResponseBody$outboundSchema.parse(
      v1BulkDeleteSecretsResponseBody,
    ),
  );
}

export function v1BulkDeleteSecretsResponseBodyFromJSON(
  jsonString: string,
): SafeParseResult<V1BulkDeleteSecretsResponseBody, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => V1BulkDeleteSecretsResponseBody$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'V1BulkDeleteSecretsResponseBody' from JSON`,
  );
}
