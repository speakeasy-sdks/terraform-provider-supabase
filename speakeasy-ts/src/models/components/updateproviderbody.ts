/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import {
  AttributeMapping,
  AttributeMapping$inboundSchema,
  AttributeMapping$Outbound,
  AttributeMapping$outboundSchema,
} from "./attributemapping.js";

export type UpdateProviderBody = {
  metadataXml?: string | undefined;
  metadataUrl?: string | undefined;
  domains?: Array<string> | undefined;
  attributeMapping?: AttributeMapping | undefined;
};

/** @internal */
export const UpdateProviderBody$inboundSchema: z.ZodType<
  UpdateProviderBody,
  z.ZodTypeDef,
  unknown
> = z.object({
  metadata_xml: z.string().optional(),
  metadata_url: z.string().optional(),
  domains: z.array(z.string()).optional(),
  attribute_mapping: AttributeMapping$inboundSchema.optional(),
}).transform((v) => {
  return remap$(v, {
    "metadata_xml": "metadataXml",
    "metadata_url": "metadataUrl",
    "attribute_mapping": "attributeMapping",
  });
});

/** @internal */
export type UpdateProviderBody$Outbound = {
  metadata_xml?: string | undefined;
  metadata_url?: string | undefined;
  domains?: Array<string> | undefined;
  attribute_mapping?: AttributeMapping$Outbound | undefined;
};

/** @internal */
export const UpdateProviderBody$outboundSchema: z.ZodType<
  UpdateProviderBody$Outbound,
  z.ZodTypeDef,
  UpdateProviderBody
> = z.object({
  metadataXml: z.string().optional(),
  metadataUrl: z.string().optional(),
  domains: z.array(z.string()).optional(),
  attributeMapping: AttributeMapping$outboundSchema.optional(),
}).transform((v) => {
  return remap$(v, {
    metadataXml: "metadata_xml",
    metadataUrl: "metadata_url",
    attributeMapping: "attribute_mapping",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UpdateProviderBody$ {
  /** @deprecated use `UpdateProviderBody$inboundSchema` instead. */
  export const inboundSchema = UpdateProviderBody$inboundSchema;
  /** @deprecated use `UpdateProviderBody$outboundSchema` instead. */
  export const outboundSchema = UpdateProviderBody$outboundSchema;
  /** @deprecated use `UpdateProviderBody$Outbound` instead. */
  export type Outbound = UpdateProviderBody$Outbound;
}

export function updateProviderBodyToJSON(
  updateProviderBody: UpdateProviderBody,
): string {
  return JSON.stringify(
    UpdateProviderBody$outboundSchema.parse(updateProviderBody),
  );
}

export function updateProviderBodyFromJSON(
  jsonString: string,
): SafeParseResult<UpdateProviderBody, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => UpdateProviderBody$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'UpdateProviderBody' from JSON`,
  );
}
