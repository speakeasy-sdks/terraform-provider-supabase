/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import {
  StorageFeatures,
  StorageFeatures$inboundSchema,
  StorageFeatures$Outbound,
  StorageFeatures$outboundSchema,
} from "./storagefeatures.js";

export type UpdateStorageConfigBody = {
  fileSizeLimit?: number | undefined;
  features?: StorageFeatures | undefined;
};

/** @internal */
export const UpdateStorageConfigBody$inboundSchema: z.ZodType<
  UpdateStorageConfigBody,
  z.ZodTypeDef,
  unknown
> = z.object({
  fileSizeLimit: z.number().int().optional(),
  features: StorageFeatures$inboundSchema.optional(),
});

/** @internal */
export type UpdateStorageConfigBody$Outbound = {
  fileSizeLimit?: number | undefined;
  features?: StorageFeatures$Outbound | undefined;
};

/** @internal */
export const UpdateStorageConfigBody$outboundSchema: z.ZodType<
  UpdateStorageConfigBody$Outbound,
  z.ZodTypeDef,
  UpdateStorageConfigBody
> = z.object({
  fileSizeLimit: z.number().int().optional(),
  features: StorageFeatures$outboundSchema.optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UpdateStorageConfigBody$ {
  /** @deprecated use `UpdateStorageConfigBody$inboundSchema` instead. */
  export const inboundSchema = UpdateStorageConfigBody$inboundSchema;
  /** @deprecated use `UpdateStorageConfigBody$outboundSchema` instead. */
  export const outboundSchema = UpdateStorageConfigBody$outboundSchema;
  /** @deprecated use `UpdateStorageConfigBody$Outbound` instead. */
  export type Outbound = UpdateStorageConfigBody$Outbound;
}

export function updateStorageConfigBodyToJSON(
  updateStorageConfigBody: UpdateStorageConfigBody,
): string {
  return JSON.stringify(
    UpdateStorageConfigBody$outboundSchema.parse(updateStorageConfigBody),
  );
}

export function updateStorageConfigBodyFromJSON(
  jsonString: string,
): SafeParseResult<UpdateStorageConfigBody, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => UpdateStorageConfigBody$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'UpdateStorageConfigBody' from JSON`,
  );
}
