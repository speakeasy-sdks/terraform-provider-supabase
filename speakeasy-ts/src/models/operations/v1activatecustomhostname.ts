/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type V1ActivateCustomHostnameRequest = {
  /**
   * Project ref
   */
  ref: string;
};

/** @internal */
export const V1ActivateCustomHostnameRequest$inboundSchema: z.ZodType<
  V1ActivateCustomHostnameRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  ref: z.string(),
});

/** @internal */
export type V1ActivateCustomHostnameRequest$Outbound = {
  ref: string;
};

/** @internal */
export const V1ActivateCustomHostnameRequest$outboundSchema: z.ZodType<
  V1ActivateCustomHostnameRequest$Outbound,
  z.ZodTypeDef,
  V1ActivateCustomHostnameRequest
> = z.object({
  ref: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace V1ActivateCustomHostnameRequest$ {
  /** @deprecated use `V1ActivateCustomHostnameRequest$inboundSchema` instead. */
  export const inboundSchema = V1ActivateCustomHostnameRequest$inboundSchema;
  /** @deprecated use `V1ActivateCustomHostnameRequest$outboundSchema` instead. */
  export const outboundSchema = V1ActivateCustomHostnameRequest$outboundSchema;
  /** @deprecated use `V1ActivateCustomHostnameRequest$Outbound` instead. */
  export type Outbound = V1ActivateCustomHostnameRequest$Outbound;
}

export function v1ActivateCustomHostnameRequestToJSON(
  v1ActivateCustomHostnameRequest: V1ActivateCustomHostnameRequest,
): string {
  return JSON.stringify(
    V1ActivateCustomHostnameRequest$outboundSchema.parse(
      v1ActivateCustomHostnameRequest,
    ),
  );
}

export function v1ActivateCustomHostnameRequestFromJSON(
  jsonString: string,
): SafeParseResult<V1ActivateCustomHostnameRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => V1ActivateCustomHostnameRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'V1ActivateCustomHostnameRequest' from JSON`,
  );
}
