// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type CreateAPIKeyBodyType string

const (
	CreateAPIKeyBodyTypePublishable CreateAPIKeyBodyType = "publishable"
	CreateAPIKeyBodyTypeSecret      CreateAPIKeyBodyType = "secret"
)

func (e CreateAPIKeyBodyType) ToPointer() *CreateAPIKeyBodyType {
	return &e
}
func (e *CreateAPIKeyBodyType) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "publishable":
		fallthrough
	case "secret":
		*e = CreateAPIKeyBodyType(v)
		return nil
	default:
		return fmt.Errorf("invalid value for CreateAPIKeyBodyType: %v", v)
	}
}

type CreateAPIKeyBodySecretJwtTemplate struct {
	Role string `json:"role"`
}

func (o *CreateAPIKeyBodySecretJwtTemplate) GetRole() string {
	if o == nil {
		return ""
	}
	return o.Role
}

type CreateAPIKeyBody struct {
	Type              CreateAPIKeyBodyType               `json:"type"`
	Description       *string                            `json:"description,omitempty"`
	SecretJwtTemplate *CreateAPIKeyBodySecretJwtTemplate `json:"secret_jwt_template,omitempty"`
}

func (o *CreateAPIKeyBody) GetType() CreateAPIKeyBodyType {
	if o == nil {
		return CreateAPIKeyBodyType("")
	}
	return o.Type
}

func (o *CreateAPIKeyBody) GetDescription() *string {
	if o == nil {
		return nil
	}
	return o.Description
}

func (o *CreateAPIKeyBody) GetSecretJwtTemplate() *CreateAPIKeyBodySecretJwtTemplate {
	if o == nil {
		return nil
	}
	return o.SecretJwtTemplate
}
