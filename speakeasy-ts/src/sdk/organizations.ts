/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { organizationsCreate } from "../funcs/organizationsCreate.js";
import { organizationsGet } from "../funcs/organizationsGet.js";
import { organizationsList } from "../funcs/organizationsList.js";
import { organizationsListMembers } from "../funcs/organizationsListMembers.js";
import { ClientSDK, RequestOptions } from "../lib/sdks.js";
import * as components from "../models/components/index.js";
import * as operations from "../models/operations/index.js";
import { unwrapAsync } from "../types/fp.js";

export class Organizations extends ClientSDK {
  /**
   * List all organizations
   *
   * @remarks
   * Returns a list of organizations that you currently belong to.
   */
  async list(
    options?: RequestOptions,
  ): Promise<Array<components.OrganizationResponseV1>> {
    return unwrapAsync(organizationsList(
      this,
      options,
    ));
  }

  /**
   * Create an organization
   */
  async create(
    request: components.CreateOrganizationV1Dto,
    options?: RequestOptions,
  ): Promise<components.OrganizationResponseV1> {
    return unwrapAsync(organizationsCreate(
      this,
      request,
      options,
    ));
  }

  /**
   * List members of an organization
   */
  async listMembers(
    request: operations.V1ListOrganizationMembersRequest,
    options?: RequestOptions,
  ): Promise<Array<components.V1OrganizationMemberResponse>> {
    return unwrapAsync(organizationsListMembers(
      this,
      request,
      options,
    ));
  }

  /**
   * Gets information about the organization
   */
  async get(
    request: operations.V1GetAnOrganizationRequest,
    options?: RequestOptions,
  ): Promise<components.V1OrganizationSlugResponse> {
    return unwrapAsync(organizationsGet(
      this,
      request,
      options,
    ));
  }
}
